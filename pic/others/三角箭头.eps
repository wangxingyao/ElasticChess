%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(TM) 5.0%%AI8_CreatorVersion: 10.0%%For: (terry bruken) (brukon)%%Title: (E0032_Arrows06.eps)%%CreationDate: 12/2/02 9:16 PM%%BoundingBox: 36 -2279 3627 -36%%HiResBoundingBox: 36 -2278.4458 3627 -36%%DocumentProcessColors: Cyan Black%%DocumentFonts: Verdana%%DocumentNeededFonts: Verdana%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0%%+ procset Adobe_typography_AI5 1.0 0%%+ procset Adobe_blend_AI5 1.0 0%%+ procset Adobe_Illustrator_AI5 1.0 0%AI5_FileFormat 1.1%AI3_ColorUsage: Color%AI3_IncludePlacedImages%AI3_TemplateBox: 1836.5 -1152.5 1836.5 -1152.5%AI3_TileBox: 1242.0005 -1547 1818.0005 -797%AI3_DocumentPreview: Macintosh_ColorPic%AI5_ArtSize: 3672 2304%AI5_RulerUnits: 0%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0%AI5_TargetResolution: 800%AI5_NumLayers: 4%AI5_OpenToView: -35.9895 0.1335 -6 1266 905 18 0 0 7 67 0 0%AI5_OpenViewLayers: 7333%%PageOrigin:1242.0005 -1547%%AI3_PaperRect:-18 787 594 -5%%AI3_Margin:18 -33 -18 5%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9%AI9_Flatten: 1%%EndComments%%BeginProlog%%BeginResource: procset Adobe_level2_AI5 1.2 0%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)%%Version: 1.2 0%%CreationDate: (04/10/93) ()%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)userdict /Adobe_level2_AI5 26 dict dup begin	put	/packedarray where not	{		userdict begin		/packedarray		{			array astore readonly		} bind def		/setpacking /pop load def		/currentpacking false def	 end		0	} if	pop	userdict /defaultpacking currentpacking put true setpacking	/initialize	{		Adobe_level2_AI5 begin	} bind def	/terminate	{		currentdict Adobe_level2_AI5 eq		{		 end		} if	} bind def	mark	/setcustomcolor where not	{		/findcmykcustomcolor		{			(AI8_CMYK_CustomColor)			6 packedarray		} bind def		/findrgbcustomcolor		{			(AI8_RGB_CustomColor)			5 packedarray		} bind def		/setcustomcolor		{			exch 			aload pop dup			(AI8_CMYK_CustomColor) eq			{				pop pop				4				{					4 index mul					4 1 roll				} repeat				5 -1 roll pop				setcmykcolor			}			{				dup (AI8_RGB_CustomColor) eq				{					pop pop					3					{						1 exch sub						3 index mul 						1 exch sub						3 1 roll					} repeat					4 -1 roll pop					setrgbcolor				}				{					pop					4					{						4 index mul 4 1 roll					} repeat					5 -1 roll pop					setcmykcolor				} ifelse			} ifelse		}		def	} if	/setAIseparationgray	{		false setoverprint		0 setgray		/setseparationgray where{			pop setseparationgray		}{			/setcolorspace where{				pop				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace				1 exch sub setcolor			}{				setgray			}ifelse		}ifelse	} def		/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put	userdict /level2?	systemdict /languagelevel known dup	{		pop systemdict /languagelevel get 2 ge	} if	put/level2ScreenFreq{ begin		60		HalftoneType 1 eq		{			pop Frequency		} if		HalftoneType 2 eq		{			pop GrayFrequency		} if		HalftoneType 5 eq		{			pop Default level2ScreenFreq		} if end} bind defuserdict /currentScreenFreq  	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse putlevel2? not	{		/setcmykcolor where not		{			/setcmykcolor			{				exch .11 mul add exch .59 mul add exch .3 mul add				1 exch sub setgray			} def		} if		/currentcmykcolor where not		{			/currentcmykcolor			{				0 0 0 1 currentgray sub			} def		} if		/setoverprint where not		{			/setoverprint /pop load def		} if		/selectfont where not		{			/selectfont			{				exch findfont exch				dup type /arraytype eq				{					makefont				}				{					scalefont				} ifelse				setfont			} bind def		} if		/cshow where not		{			/cshow			{				[				0 0 5 -1 roll aload pop				] cvx bind forall			} bind def		} if	} if	cleartomark	/anyColor?	{		add add add 0 ne	} bind def	/testColor	{		gsave		setcmykcolor currentcmykcolor		grestore	} bind def	/testCMYKColorThrough	{		testColor anyColor?	} bind def	userdict /composite?	1 0 0 0 testCMYKColorThrough	0 1 0 0 testCMYKColorThrough	0 0 1 0 testCMYKColorThrough	0 0 0 1 testCMYKColorThrough	and and and	put	composite? not	{		userdict begin		gsave		/cyan? 1 0 0 0 testCMYKColorThrough def		/magenta? 0 1 0 0 testCMYKColorThrough def		/yellow? 0 0 1 0 testCMYKColorThrough def		/black? 0 0 0 1 testCMYKColorThrough def		grestore		/isCMYKSep? cyan? magenta? yellow? black? or or or def		/customColor? isCMYKSep? not def	 end	} if end defaultpacking setpacking%%EndResource%%BeginResource: procset Adobe_typography_AI5 1.0 1%%Title: (Typography Operators)%%Version: 1.0 1%%CreationDate:(03/26/93) ()%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)currentpacking true setpackinguserdict /Adobe_typography_AI5 54 dict dup beginput/initialize{ begin begin	Adobe_typography_AI5 begin	Adobe_typography_AI5	{		dup xcheck		{			bind		} if		pop pop	} forall end end end	Adobe_typography_AI5 begin} def/terminate{	currentdict Adobe_typography_AI5 eq	{	 end	} if} def/modifyEncoding{	/_tempEncode exch ddef	/_pntr 0 ddef	{		counttomark -1 roll		dup type dup /marktype eq		{			pop pop exit		}		{			/nametype eq			{				_tempEncode /_pntr dup load dup 3 1 roll 1 add ddef 3 -1 roll				put			}			{				/_pntr exch ddef			} ifelse		} ifelse	} loop	_tempEncode} def/TE{	StandardEncoding 256 array copy modifyEncoding	/_nativeEncoding exch def} def%/TZ{	dup type /arraytype eq	{		/_wv exch def	}	{		/_wv 0 def	} ifelse	/_useNativeEncoding exch def	pop pop	findfont _wv type /arraytype eq	{		_wv makeblendedfont	} if	dup length 2 add dict begin	mark exch	{		1 index /FID ne		{			def		} if		cleartomark mark	} forall	pop	/FontName exch def	counttomark 0 eq	{		1 _useNativeEncoding eq		{			/Encoding _nativeEncoding def		} if		cleartomark	}	{		/Encoding load 256 array copy		modifyEncoding /Encoding exch def	} ifelse	FontName currentdict end	definefont pop} def/tr{	_ax _ay 3 2 roll} def/trj{	_cx _cy _sp _ax _ay 6 5 roll} def/a0{	/Tx	{		dup		currentpoint 3 2 roll		tr _psf		newpath moveto		tr _ctm _pss	} ddef	/Tj	{		dup		currentpoint 3 2 roll		trj _pjsf		newpath moveto		trj _ctm _pjss	} ddef} def/a1{	/Tx	{		dup currentpoint 4 2 roll gsave		dup currentpoint 3 2 roll		tr _psf		newpath moveto		tr _ctm _pss		grestore 3 1 roll moveto tr sp	} ddef	/Tj	{		dup currentpoint 4 2 roll gsave		dup currentpoint 3 2 roll		trj _pjsf		newpath moveto		trj _ctm _pjss		grestore 3 1 roll moveto tr jsp	} ddef} def/e0{	/Tx	{		tr _psf	} ddef	/Tj	{		trj _pjsf	} ddef} def/e1{	/Tx	{		dup currentpoint 4 2 roll gsave		tr _psf		grestore 3 1 roll moveto tr sp	} ddef	/Tj	{		dup currentpoint 4 2 roll gsave		trj _pjsf		grestore 3 1 roll moveto tr jsp	} ddef} def/i0{	/Tx	{		tr sp	} ddef	/Tj	{		trj jsp	} ddef} def/i1{	W N} def/o0{	/Tx	{		tr sw rmoveto	} ddef	/Tj	{		trj swj rmoveto	} ddef} def/r0{	/Tx	{		tr _ctm _pss	} ddef	/Tj	{		trj _ctm _pjss	} ddef} def/r1{	/Tx	{		dup currentpoint 4 2 roll currentpoint gsave newpath moveto		tr _ctm _pss		grestore 3 1 roll moveto tr sp	} ddef	/Tj	{		dup currentpoint 4 2 roll currentpoint gsave newpath moveto		trj _ctm _pjss		grestore 3 1 roll moveto tr jsp	} ddef} def/To{	pop _ctm currentmatrix pop} def/TO{	iTe _ctm setmatrix newpath} def/Tp{	pop _tm astore pop _ctm setmatrix	_tDict begin	/W	{	} def	/h	{	} def} def/TP{ end	iTm 0 0 moveto} def/Tr{	_render 3 le	{		currentpoint newpath moveto	} if	dup 8 eq	{		pop 0	}	{		dup 9 eq		{			pop 1		} if	} ifelse	dup /_render exch ddef	_renderStart exch get load exec} def/iTm{	_ctm setmatrix _tm concat 0 _rise translate _hs 1 scale} def/Tm{	_tm astore pop iTm 0 0 moveto} def/Td{	_mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto} def/iTe{	_render -1 eq	{	}	{		_renderEnd _render get dup null ne		{			load exec		}		{			pop		} ifelse	} ifelse	/_render -1 ddef} def/Ta{	pop} def/Tf{	dup 1000 div /_fScl exch ddef%	selectfont} def/Tl{	pop	0 exch _leading astore pop} def/Tt{	pop} def/TW{	3 npop} def/Tw{	/_cx exch ddef} def/TC{	3 npop} def/Tc{	/_ax exch ddef} def/Ts{	/_rise exch ddef	currentpoint	iTm	moveto} def/Ti{	3 npop} def/Tz{	100 div /_hs exch ddef	iTm} def/TA{	pop} def/Tq{	pop} def/Th{	pop pop pop pop pop} def/TX{	pop} def/Tk{	exch pop _fScl mul neg 0 rmoveto} def/TK{	2 npop} def/T*{	_leading aload pop neg Td} def/T*-{	_leading aload pop Td} def/T-{	_ax neg 0 rmoveto	_hyphen Tx} def/T+{} def/TR{	_ctm currentmatrix pop	_tm astore pop	iTm 0 0 moveto} def/TS{	currentfont 3 1 roll	/_Symbol_ _fScl 1000 mul selectfont		0 eq	{		Tx	}	{		Tj	} ifelse	setfont} def/Xb{	pop pop} def/Tb /Xb load def/Xe{	pop pop pop pop} def/Te /Xe load def/XB{} def/TB /XB load defcurrentdict readonly popendsetpacking%%EndResource%%BeginResource: procset Adobe_blend_AI5 1.4 0%%Title: (Adobe Illustrator (R) Version 5.0 Blend ProcSet)%%Version: 1.4 0%%CreationDate: (11/19/93) ()%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)userdict /defaultpacking currentpacking put true setpackinguserdict /Adobe_blend_AI5 70 dict dup beginput/bd{	bind def} bind def/xs{	exch store} bd/nullProc{	{	}} def/initialize{	pop pop	Adobe_blend_AI5 begin		Adobe_blend_AI5_vars begin			/_contoneDevice where			{				pop			}			{				/_contoneDevice false def				} ifelse								/_dpiThreshold where			{				pop			}			{					/_dpiThreshold 600 def			} ifelse						/_screenFreqThreshold where			{				pop			}			{					/_screenFreqThreshold 150 def			} ifelse						/tRectOK? deviceDPI _dpiThreshold le currentScreenFreq _screenFreqThreshold le and _contoneDevice not and def	/invertXfer	{		[		{			1 exch sub				} /exec load systemdict/currenttransfer get exec /exec load				] cvx systemdict/settransfer get exec			} bd			/spotDict 3 dict dup begin				/nSpots 2 def				/spot1 7 dict def				/spot2 7 dict def		 end			def			composite?			{				/_setgray_ /setgray load def				/_fill_ /fill load def				/_image_ /image load def			}			{				/_setgray_ systemdict/setgray get def				/_fill_ systemdict/fill get def				/_image_ systemdict/image get def			} ifelse		} bd		/terminate		{			currentdict Adobe_blend_AI5_vars eq			{		 end			currentdict Adobe_blend_AI5 eq			{		 end		} if	} if} bd/_compositeSpotDevice where{ begin		_compositeSpotDevice 0 ne {userdict /composite? true put} if end}{	/_compositeSpotDevice 0 def	} ifelse	/nullString () def/d255 256 array def0 1 255{	d255 exch dup 255 div put} bind for/d255- 256 array def0 1 255{	d255- exch 1 d255 2 index get sub put} bind for/dUserSpace matrix defaultmatrix defcurrentdict /Adobe_blend_AI5_vars 89 dict dup beginput{	/f /F /s /S /b /B}{	null def} bind forall/byte 1 string def/sSave null def/setSSave{	save /sSave exch store} bind def/Bm null def/doBlend null def/startC? false def/endC? false def/fCMYK? null def/startTint 0 def/endTint 0 def/bSMatrix matrix def/bUMatrix matrix def/dMatrix matrix def/inLine? true def/pTState? false def/bHi? false def/yHi 0 def/xHi 0 def/noImg /lv1Fix where{	pop lv1Fix}{	false} ifelsedef/ccAry1 5 array def/ccTint 0 def/spotColor? false def/colorimage? true def[/tint1Data/tint2Data/spotDict/bAxis/ubAxis/pChange/optimize?/nSamples/sInc/blendProc/_bn/xBCInc/yBCInc/bInc/bRender/cBName/cBType/nColors/color?/blend?/colorType/cData/cDataLen/bDataLen/rampPoint/midPoint/endPoint/blendLength/blackData/yeData/mgData/cyData/cnt1/ndx/_fill/tmpcounttomark{	null def} bindrepeatpopcurrentdictendcurrentdictendexchbeginbegin/unitSq{	0 0 moveto 0 1 lineto 1 1 lineto 1 0 lineto closepath} bd/gMark{	counttomark 2 add -1 roll} bd/setCustomColor{	dup /ccTint exch store	1 exch sub 6 1 roll	ccAry1 astore	exch setcustomcolor} bd/currentCustomColor{	ccAry1 aload pop ccTint} bd/nsetcustomcolor where {	pop}{	/nsetcustomcolor	{		pop setcmykcolor		} bd} ifelse/nsetcustomcolorend where {	pop}{	/nsetcustomcolorend	{	} bd} ifelse/setBSpace{	newpath bUMatrix astore concat unitSq} bd/setCStop{	dup 0 eq	{		pop				spotColor?			{			dup 1 exch sub /ccTint exch def			ccAry1 4 /Black put			} if		setgray	}	{		1 eq		{			setcmykcolor		}		{			composite? not colorType 2 lt and			{				forceCMYK			}			{				setCustomColor			} ifelse		} ifelse	} ifelse} bd/makeByte{	/tmp 0 store	255 mul cvi	8 string 8	{		dup tmp 3 index put /tmp tmp 1 add store	} repeat	exch pop} bd/setImgSpace{	cDataLen 1 8	2 index 0 0 1 0 0 dMatrix astore} bd/bwImage{	setImgSpace cData /_image_ load	{		exec	} stopped	{		$error /errorname get /undefinedresult ne		{			stop		}		{			pop pop pop pop pop		} ifelse	} if} bdlevel2?{	/bFill	{		_fill	} def	/bCImg	{		/cDataLen bDataLen store		setImgSpace		setSSave		expandSpot		cyData mgData yeData cData		expandCMYK		true 4 spotDict		{			ncolorimage		} stopped		{			$error /errorname get /undefinedresult ne			{				stop			}			{				10				{					pop				} repeat			} ifelse		} if		sSave restore	} bd} if/expandOne{			dup type /stringtype ne			{				cDataLen string				exch				dup 0 ne				{					255 mul cvi					0 1 cDataLen 1 sub					{						3 copy						exch put pop					} for				} if				pop			} if} bd/expandSpot{	spotColor?	{		spotDict begin			spot1 begin				tintImage type /nulltype ne				{					tintImage expandOne /tintImage exch def				} if		  end			spot2 begin				tintImage type /nulltype ne				{					tintImage expandOne /tintImage exch def				} if		  end	 end	} if} bd/expandCMYK{	4	{		expandOne 4 1 roll	} repeat} bd/colorimage where dup{	exch pop		/ncolorimage where	{		pop	}	{		/ncolorimage {pop colorimage} bd	} ifelse} ifnot{	/ncolorimage where 	{		pop	}	{		/colorimage? false store		/ncolorimage		{			pop pop pop			setSSave		/blackData xs		/yeData xs		/mgData xs		/cyData xs		/cnt1 0 store		[		byte dup 0		cyData dup type /stringtype eq		{			/cnt1 cvx /get cvx d255 /exch cvx /get cvx .3 /mul cvx		}		{			.3 mul		} ifelse		mgData dup type /stringtype eq		{			/cnt1 cvx /get cvx d255 /exch cvx /get cvx .59 /mul cvx		}		{			.59 mul		} ifelse		yeData dup type /stringtype eq		{			/cnt1 cvx /get cvx d255 /exch cvx /get cvx .11 /mul cvx		}		{			.11 mul		} ifelse		blackData dup type /stringtype eq		{			/cnt1 cvx /get cvx d255 /exch cvx /get cvx		} if		/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx		/dup cvx 0 /lt cvx		{			pop 0		} /if cvx		/dup cvx 1 /gt cvx		{			pop 1		} /if cvx		255 /mul cvx /cvi cvx		256 /mod cvx		/dup cvx 0 /lt cvx		{			pop 0		} /if cvx		/put cvx		/cnt1 dup cvx 1 /add cvx /store cvx		] cvx		bind			_image_ 		sSave restore	} bd	} ifelse} iflevel2? not{	/bCImg	{		/cDataLen bDataLen store		setImgSpace		setSSave		expandSpot		cyData mgData yeData cData		colorimage? 		{			expandCMYK		} if		true 4 spotDict		{			ncolorimage		} stopped		{			$error /errorname get /undefinedresult ne			{				stop			}			{				10				{					pop				} repeat			} ifelse		} if		sSave restore	} bd	/bwFill	{		setSSave		/cDataLen 8 store		/cData currentgray makeByte store		bwImage		sSave restore	} bd	/c1ImgFill	{		setSSave		/cDataLen 8 store		setImgSpace		spotColor?		{			spotDict begin				spot1 begin					currentCustomColor makeByte /tintImage exch def					/name exch def					/spot_K exch def					/spot_Y exch def					/spot_M exch def					/spot_C exch def			 end				spot2 initSpotData		 end		} if		currentcmykcolor		4		{			makeByte 4 1 roll		} repeat		true 4 spotDict		{			ncolorimage		} stopped		{			$error /errorname get /undefinedresult ne			{				stop			}			{				10				{					pop				} repeat			} ifelse		} if		sSave restore	} bd	/bFill	noImg	{		{			_fill		}	}	{		{			color?			{				c1ImgFill			}			{				bwFill			} ifelse		}	} ifelse	bd} ifcomposite?{	/bCFun	{		color?		{			cyData dup type /stringtype eq			{				/ndx cvx /get cvx d255 /exch cvx /get cvx			} if			mgData dup type /stringtype eq			{				/ndx cvx /get cvx d255 /exch cvx /get cvx			} if			yeData dup type /stringtype eq			{				/ndx cvx /get cvx d255 /exch cvx /get cvx			} if			cData dup type /stringtype eq			{				/ndx cvx /get cvx d255 /exch cvx /get cvx			} if			spotColor?			{				spotDict begin					/spotDict cvx /begin cvx					spot1 begin						tintImage dup type /stringtype eq						{							/ndx cvx /get cvx d255- /exch cvx /get cvx						}						{							dup type /nulltype ne 							{								name type /nametype ne {1 exch sub} if							} if						} ifelse				 end					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx					spot2 begin						tintImage dup type /stringtype eq						{							/ndx cvx /get cvx d255- /exch cvx /get cvx						}						{							dup type /nulltype ne 							{								name type /nametype ne {1 exch sub} if							} if						} ifelse				 end					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx					/end cvx			 end				/spotDict cvx				/nsetcustomcolor cvx			}			{				/setcmykcolor cvx			} ifelse		}		{			cData /ndx cvx /get cvx			d255 /exch cvx /get cvx			/setgray cvx		} ifelse	} bd	/Bc	{		newpath		gsave		setBSpace		nColors 1 eq		{			pop pop			setCStop		} if		bFill		grestore	} bd	/linealBm	{		/nColors dup load 1 sub store		newpath		gsave		setBSpace		blend?		{			linImg		}		{			bFill		} ifelse		grestore		nColors 1 gt		{			getRData		} if	} bd	/rdBm	{		/nColors dup load 1 sub store		_fill		gsave		bUMatrix astore concat		bHi?		{			xHi yHi bUMatrix idtransform /yHi exch store /xHi exch store			rampPoint 1 lt			{				1 rampPoint sub dup xHi mul exch yHi mul translate			} if		} if		nColors		{			0 0 rampPoint 0 360 arc			_fill			blend? bHi? or			{				rdBlend			} if			nColors 1 gt			{				getRData			} if			/nColors dup load 1 sub store		} repeat		/nColors 1 store		grestore	} bd	/cGetRData	{		setCStop		/blend?		cData type /stringtype eq		dup not color? and		{			pop			cyData type /stringtype eq			mgData type /stringtype eq			yeData type /stringtype eq			or or		} if		store	} def	/cGetRData} if/eCStop{	mark	1 index 3 mul 3 add dup 8 gt	{		pop 8	} if	1 roll	cleartomark} bdcomposite? not{	/knockOut	level2?	{		{			0 0 0 0 setcmykcolor _fill		}	}	{		/bFill noImg		{			{				_fill			}		}		{			{				_of true eq				{					currentgray 1 ne					{						bwFill					} if				}				{					bwFill				} ifelse			}		} ifelse		def		/whiteByte 1 makeByte def		noImg		{			{				0 0 0 0 setcmykcolor _fill			}		}		{			{				cBType 0 eq				{					setSSave					/cData whiteByte store					/cDataLen 8 store					bwImage					sSave restore				}				{					_fill				} ifelse			}		} ifelse	} ifelse	bd	/bCFun	{		cData dup type /stringtype ne		{			color?			{				1 exch sub			} if		}		{			/ndx cvx /get cvx			color? customColor? not and			{				d255-			}			{				d255			} ifelse			/exch cvx /get cvx		} ifelse		/_setgray_ cvx	} bd	/eCCBlend	{		dup 3 eq		{			pop			mark 7 1 roll			6 copy ccThrough? dup /blend? xs			{				/startC? true store				setCustomColor				customColor?				{					/cData tint1Data store					setCDataLen				} if				/endC?				3 index 3 eq				{					4 index 1 ne				}				{					false				} ifelse				store			} if			cleartomark			stop		} if		1 eq		{			pop pop pop		} if		pop		/startC? false store		6		{			8 index		} repeat		ccThrough? dup /blend? xs		{			/endC? true store			blend? not			{				stop			} if			customColor?			{				/cData tint1Data store				setCDataLen			} if		} if	} bd	/handleOP	{		_of not		{			knockOut		} if	} bd	/handleROP	{		_of not		{			0 0 0 0 setcmykcolor _fill		}		{			newpath			} ifelse	} bd	/rdBm	{		/nColors dup load 1 sub store		blend? 		{			_fill		}		{			handleROP		} ifelse		gsave		bUMatrix astore concat		bHi?		{			xHi yHi bUMatrix idtransform /yHi exch store /xHi exch store			rampPoint 1 lt			{				1 rampPoint sub dup xHi mul exch yHi mul translate			} if		} if		nColors		{			0 0 rampPoint 0 360 arc			blend?			{				cData type /stringtype ne bHi? not and				{					cData color?					{						1 exch sub					} if					_setgray_ 					_fill_ 				}				{					cData type /stringtype ne					{						/cDataLen 1 store						/bDataLen 1 store					} if					rdBlend				} ifelse			}			{								handleROP								pTState?				{					/bAxis rampPoint endPoint sub store					xHi bAxis mul yHi bAxis mul translate				} if			} ifelse							nColors 1 gt			{				getRData			} if			/nColors dup load 1 sub store		} repeat		/nColors 1 store		grestore	} bd	/ccThrough?	{		gsave		pop 0 setCustomColor		currentcmykcolor		grestore		anyColor?	} bd	/forceCMYK	{		exch pop		1 exch sub 5 1 roll		4		{			4 index mul 4 1 roll		} repeat		0		cCMYKData dup /cData ne		{			dup /yeData eq			{				pop 1 add			}			{				/mgData eq				{					2				}				{					3				} ifelse				add			} ifelse			0		} if		pop		index		0 eq		{			pop pop pop pop 0 0 0 0		} if		setcmykcolor		pop		/fCMYK? true store	} bd	/endCapSepBc	{		pop pop		dup 0 eq		{			pop			setgray		}		{			1 eq			{				setcmykcolor			}			{				colorType 1 eq				{					forceCMYK				}				{					fCMYK?					{						forceCMYK					}					{						setCustomColor					} ifelse				} ifelse			} ifelse		} ifelse		currentcmykcolor anyColor? 		blend? and		{			bFill		}		{			handleOP		} ifelse			} bd} if/cCMYKData 0 defcomposite? dup not{	pop customColor?} ifnot{	/cCMYKData	/cyData /mgData /yeData /cData	black? not	{		yellow?		{			exch		}		{			magenta?			{				3			}			{				4			} ifelse			-1 roll		} ifelse	} if	4 1 roll pop pop pop	store	/Bc	{		gsave		setBSpace		nColors 1 gt		{						blend? currentcmykcolor anyColor? and			{				bFill			}			{				handleOP			} ifelse		}		{			endCapSepBc		} ifelse		grestore		newpath	} bd	/linealBm	{		/nColors dup load 1 sub store		newpath		gsave		setBSpace		blend?		{			cCMYKData load dup type /stringtype eq			{				dup length /cDataLen xs				/cData xs				gsave				colorType 0 ne noImg not and				{					invertXfer				} if				linImg				grestore			}			{				pop bFill			} ifelse		}		{			handleOP		} ifelse		grestore		nColors 1 gt		{			getRData		} if	} bd	/cmykGetRData	{		/fCMYK? false store		blend?		{			{				cmykDataProcs colorType get exec			} stopped			pop			blend?			{				/cData cCMYKData load store				setCDataLen			} if		} if	} def	/cmykDataProcs	[	{		pop		black? dup /blend? xs		{			setgray			0		} if		pop	}	{		cCMYKData load dup type /stringtype ne		{			0 0 0			cyan? not			{				4 magenta?				{					1				}				{					yellow?					{						2					}					{						3					} ifelse				} ifelse				roll			} if			4 copy add add add 0 eq			{				/blend? false store			} if						setcmykcolor			/startC? true store			/endC? true store			eCStop			stop		} if		pop		dup 0 eq		{			pop			setgray		}		{			1 eq			{				setcmykcolor			}			{				forceCMYK			} ifelse		} ifelse	} bind	/eCCBlend load	{		cBType 1 eq		{			tint1Data tint2Data			/tint1Data xs			/tint2Data xs		} if		0 eq		{			black?			{				setgray			}			{				0 0 0 4 -1 roll 1 exch sub setcmykcolor			} ifelse			black?			{				/blend? true store			} if			6			{				8 index			} repeat			ccThrough?			{				/blend? true store			}			{				black?				{					/cData tint1Data store					setCDataLen				}				{					/blend? false store				} ifelse			} ifelse		}		{			mark 7 1 roll			6 copy ccThrough?			{				forceCMYK				pop				stop			} if			9 index 0 eq			{				black? dup /blend? xs				{					pop 1 setgray					/cData tint2Data store					setCDataLen					0				} if				pop			}			{				/blend?				6				{					16 index				} repeat				ccThrough?				store				blend?				{					forceCMYK				} if			} ifelse			cleartomark		} ifelse	} bind	] def	/cmykGetRData} ifcomposite? dup not{	pop isCMYKSep?} ifnot{	/endCapSepBc	{		/white? false store		pop pop		dup 0 eq		{			pop			/white? 1 index 1 eq store			setgray		}		{			1 eq			{				setcmykcolor			}			{				setCustomColor			} ifelse		} ifelse%		currentcmykcolor anyColor?		endC? or		blend? and		{			bFill		}		{			handleOP		} ifelse	} bd	/Bc	{		gsave		setBSpace		nColors 1 gt		{			blend? startC? and			{				bFill			}			{				handleOP			} ifelse		}		{			endCapSepBc		} ifelse		grestore		newpath	} bd	/linealBm	{		/nColors dup load 1 sub store		newpath		gsave		setBSpace		blend?		{			cData type /stringtype eq			{				linImg			}			{				bFill			} ifelse		}		{			handleOP		} ifelse		grestore		nColors 1 gt		{			getRData		} if	} bd	/discardCMY	{		counttomark 4 add -3 roll pop pop pop	} bd	/testTopCC	{		6 copy ccThrough?	} bd	/getCRamp	{		{			ccDataProcs colorType 2 sub get exec		} stopped pop		blend? cDataLen 0 eq and		{			/cDataLen bDataLen store		} if	} bd	/ccGetRData	{		/fCMYK? false store		/startC? false store		/endC? false store		colorType 2 lt		{			/blend? false def		} if		blend?		{			getCRamp		}		{			setCStop		} ifelse		blend?		{			/blend? cData 1 ne store			blend?			{				cData dup type /stringtype ne				{					1 exch sub /cData xs 0				} if				pop			} if		} if	} def	/ccDataProcs	[	/eCCBlend load	{		cBType 1 eq		{			tint1Data tint2Data			/tint1Data xs			/tint2Data xs		} if		0 eq		{			/blend? false store			pop		}		{			mark 7 1 roll			testTopCC			{				/blend? 1 index 1 ne store				/startC? blend? store				/endC? false store				blend? not				{					cleartomark stop				} if				/cData tint1Data store				setCDataLen				setCustomColor				pop				stop			} if			cleartomark		} ifelse		2 index 0 eq		{			/blend? false store		}		{			mark 6			{				9 index			} repeat			testTopCC dup /blend? xs			{				/blend? 1 index 1 ne store				/endC? blend? store				/startC? false store				blend? not				{					cleartomark stop				} if				/cData tint2Data store				setCDataLen			} if			cleartomark		} ifelse	} bind	] def	/ccGetRData} ifload Adobe_blend_AI5_vars /getData 3 -1 roll put/setCDataLen{	/cDataLen 0 cData dup type /stringtype eq	{		length exch	} if	pop store} bd/initSpotData{ begin		/name null def		/tintImage null def		/tintValue null def		/spot_C  null def		/spot_M  null def		/spot_Y  null def		/spot_K  null def end} bd/getRData{	/colorType gMark store	_compositeSpotDevice 0 ne	{		spotDict begin			spot1 initSpotData			spot2 initSpotData	 end		/spotColor? colorType 2 eq colorType 3 eq or def	} 	{		/spotColor? false store	} ifelse	/blend? true store	0 0 0 0 setcmykcolor	100 div /rampPoint xs% (between 13 and 87%) 	100 div /midPoint xs	dup 0 eq	{		2	}	{		dup 1 eq		{			5		}		{			_compositeSpotDevice 0 ne			{				spotDict begin					spot1 begin						/name 3 index def						/spot_K 4 index def						/spot_Y 5 index def						/spot_M 6 index def						/spot_C 7 index def				 end			 end			} if			7		} ifelse	} ifelse	/tmp exch def	tmp index 100 div /endPoint xs	_compositeSpotDevice 0 ne	{		tmp 2 add index 3 eq		{			/tmp tmp 4 add def			tmp index dup 			spotDict begin				spot1/name get ne				{					spot2 begin						/name exch def						/spot_K tmp 2 add index def						/spot_Y tmp 3 add index def						/spot_M tmp 4 add index def						/spot_C tmp 5 add index def				 end				}				{					pop				} ifelse		 end		} if	} if	/color? colorType 0 gt store		colorType 3 eq	{		/tint2Data gMark store	} if		colorType 2 ge	{		/tint1Data gMark store	} if	_compositeSpotDevice 0 ne	{		spotDict begin					colorType 2 ge			{				colorType 3 eq				{					spot2 begin						/tintImage cBType 0 eq {tint2Data} {tint1Data} ifelse def						name null eq {/name /Black def} if				 end				} if				spot1 begin					/tintImage cBType 0 eq colorType 2 eq or {tint1Data} {tint2Data} ifelse def					colorType 2 eq 					{						name null eq 						{							/name spot2/name get def							spot2/name null put						} if					}					{						name null eq {/name /Black def} if					} ifelse			 end			} if	 end	} if		/cData gMark store	setCDataLen	colorType 0 gt	{		counttomark 4 add -3 roll		/yeData xs		/mgData xs		/cyData xs	} if	blend?	{		/bDataLen		cDataLen dup 0 eq color? and		{			[			cyData mgData yeData			]			{				dup type /stringtype eq				{					length exch pop exit				} if				pop			} forall		} if		store		bDataLen 0 eq		{			/bDataLen 1 store		} if		getData		blend?		{			composite? cDataLen 0 eq and			{				/cDataLen bDataLen store			} if		} if	}	{		setCStop	} ifelse} bd/Bg{	0 0 0 0 setcmykcolor	6	{		pop	} repeat	/blendLength xs	pop pop pop	/cBName xs	/bRender xs	bRender 2 ne	{		composite? not		{			_of setoverprint		} if		_eo {eoclip} {clip} ifelse		_bn cBName 2 copy known		{			get			mark exch aload pop			/cBType xs			/nColors xs			mark exch aload pop			0 0		} if		pop pop		getRData		cBType 0 eq		{			/linealBm		}		{			bHi?			{				/pTState? nColors 2 gt store			} if			/doBlend /rdBlend load store			/rdBm		} ifelse	}	{		inLine? not		{			mark mark		} if		/Bc dup		{			cleartomark mark		} bd		/nullProc	} ifelse	load /Bm xs} bd/linImgnoImg{	{		newpath doRctBlend	}}{	{		/doBlend		color? composite? and		{			/bCImg		}		{			/bwImage		} ifelse		load		store			0 0 moveto		tRectOK? composite? and		{			{				mark				0 1 dtransform atan cvi 90 mod 0 eq				1 0 dtransform atan cvi 90 mod 0 eq			} stopped			{				cleartomark			}			{				and exch pop				{					newpath					doRctBlend				}				{					doBlend				} ifelse			} ifelse		}		{			doBlend		} ifelse	} } ifelsebd/doRctBlend{	gsave	/sInc 1 store	/nSamples bDataLen store	/bInc 1 bDataLen div store	/ubAxis 1 0 dtransform dUserSpace idtransform dup mul exch dup mul add sqrt store	/pChange ubAxis 0 eq	{		0	}	{		bDataLen ubAxis div	} ifelse	store	pChange .5 gt noImg not and dup /optimize? xs	{		/nSamples ubAxis 2 div round cvi dup 1 le		{			pop 2		} if		store		/bInc 1 nSamples div store		/sInc bDataLen 1 sub nSamples 1 sub div store	} if	0	nSamples	[	/dup cvx	optimize?	{		/round cvx /cvi cvx	} if	/ndx /exch cvx /store cvx	bCFun	/rectfill where dup	{		exch pop _compositeSpotDevice 1 ne and	} if	{		0 0 bInc 1 /rectfill cvx		}	{		0 0 /moveto cvx		bInc 0 /lineto cvx		bInc 1 /lineto cvx		0 1 /lineto cvx		/closepath cvx		/_fill_ cvx	} ifelse	bInc 0 /translate cvx	sInc /add cvx	] cvx	bind	repeat	pop	spotColor? {nsetcustomcolorend} if		grestore} bd/rdPrep{	/nSamples bDataLen dup 0 eq	{		pop 1	} if	store	/sInc -1 store	/bAxis rampPoint endPoint sub store	/bInc bAxis bDataLen div neg store	/optimize? false store	tRectOK?	{		/ubAxis		bAxis 0 dtransform dUserSpace idtransform dup mul exch dup mul add sqrt		0 bAxis dtransform dUserSpace idtransform dup mul exch dup mul add sqrt		2 copy lt		{			exch		} if		pop store		/pChange ubAxis 0 eq		{			0		}		{			bDataLen ubAxis div		} ifelse		store		pChange .5 gt noImg not and dup /optimize? xs		{			/nSamples ubAxis 2 div round cvi dup 1 le			{				pop 2			} if			store			/bInc bAxis nSamples div neg store			/sInc bDataLen 1 sub nSamples 1 sub div neg store		} if	} if	bHi?	{		/xBCInc xHi bAxis mul nSamples div store		/yBCInc yHi bAxis mul nSamples div store	} if} bd/rdBlend{	newpath	gsave	rdPrep	rampPoint	bDataLen 1 sub	nSamples	[	/dup cvx	optimize?	{		/round cvx /cvi cvx	} if	/ndx /exch cvx /store cvx	bCFun	0 0 3 /index cvx 0 360 /arc cvx /_fill_ cvx	/exch cvx bInc /add cvx /exch cvx	sInc /add cvx	bHi?	{		xBCInc yBCInc /translate cvx	} if	] cvx	bind	repeat	pop pop	spotColor? {nsetcustomcolorend} if	grestore	pTState?	{		xHi bAxis mul yHi bAxis mul translate	} if} bd/Bh{	pop pop	/pTState? false store	2 copy 0 ne exch 0 ne or dup /bHi? xs	{		/yHi xs		/xHi xs		0 0	} if	pop pop} bd/BD{	inLine? not	{		] nColors cBType		] _bn cBName 3 -1 roll put end} if} bd/Bn{1 add dictdup nullString null put/_bn xs} bd/Bd{Adobe_blend_AI5_vars begin	3 -1 roll dup nullString eq dup	{		setSSave	} if	/inLine? exch def	/cBName exch def	/nColors exch def	/cBType exch def} bd/Bb{	sSave null eq	{		Adobe_blend_AI5_vars begin		setSSave	} if	composite?	{		/_fill /fill load store	}	{		/__fill /fill load store			/_fill			{				_of true eq				{					currentgray 1 ne					{						__fill					} if				}				{					__fill				} ifelse			} def	} ifelse	/fill	{	} def	} bd	/BB	{	/cBType xs	cleartomark cleartomark	cBType dup	bRender	sSave dup type /savetype eq	{		restore 0	} if	pop	currentdict Adobe_blend_AI5_vars eq	{	 end	} if	2 ne exch 0 gt and	{		2 eq		{			s		}		{			S		} ifelse	}	{		pop newpath	} ifelse} bdcurrentdict readonly popendenddefaultpacking setpacking%%EndResource%%BeginResource: procset Adobe_Illustrator_AI5 1.1 0%%Title: (Adobe Illustrator (R) Version 5.0 Full Prolog)%%Version: 1.1 0%%CreationDate: (3/7/1994) ()%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)currentpacking true setpackinguserdict /Adobe_Illustrator_AI5_vars 81 dict dup beginput/_eo false def/_lp /none def/_pf{} def/_ps{} def/_psf{} def/_pss{} def/_pjsf{} def/_pjss{} def/_pola 0 def/_doClip 0 def/cf currentflat def/_tm matrix def/_renderStart[/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0] def/_renderEnd[null null null null /i1 /i1 /i1 /i1] def/_render -1 def/_rise 0 def/_ax 0 def/_ay 0 def/_cx 0 def/_cy 0 def/_leading[0 0] def/_ctm matrix def/_mtx matrix def/_sp 16#020 def/_hyphen (-) def/_fScl 0 def/_cnt 0 def/_hs 1 def/_nativeEncoding 0 def/_useNativeEncoding 0 def/_tempEncode 0 def/_pntr 0 def/_tDict 2 dict def/_wv 0 def/Tx{} def/Tj{} def/CRender{} def/_AI3_savepage{} def/_gf null def/_cf 4 array def/_if null def/_of false def/_fc{} def/_gs null def/_cs 4 array def/_is null def/_os false def/_sc{} def/_pd 1 dict def/_ed 15 dict def/_pm matrix def/_fm null def/_fd null def/_fdd null def/_sm null def/_sd null def/_sdd null def/_i null def/discardSave null def/buffer 256 string def/beginString null def/endString null def/endStringLength null def/layerCnt 1 def/layerCount 1 def/perCent (%) 0 get def/perCentSeen? false def/newBuff null def/newBuffButFirst null def/newBuffLast null def/clipForward? false defenduserdict /Adobe_Illustrator_AI5 known not {	userdict /Adobe_Illustrator_AI5 91 dict put} ifuserdict /Adobe_Illustrator_AI5 get begin/initialize{	Adobe_Illustrator_AI5 dup begin	Adobe_Illustrator_AI5_vars begin	discardDict	{		bind pop pop	} forall	dup /nc get begin	{		dup xcheck 1 index type /operatortype ne and		{			bind		} if		pop pop	} forall end	newpath} def/terminate{ end end} def/_null def/ddef{	Adobe_Illustrator_AI5_vars 3 1 roll put} def/xput{	dup load dup length exch maxlength eq	{		dup dup load dup		length 2 mul dict copy def	} if	load begin	def end} def/npop{	{		pop	} repeat} def/sw{	dup length exch stringwidth	exch 5 -1 roll 3 index mul add	4 1 roll 3 1 roll mul add} def/swj{	dup 4 1 roll	dup length exch stringwidth	exch 5 -1 roll 3 index mul add	4 1 roll 3 1 roll mul add	6 2 roll /_cnt 0 ddef	{		1 index eq		{			/_cnt _cnt 1 add ddef		} if	} forall	pop	exch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop} def/ss{	4 1 roll	{		2 npop		(0) exch 2 copy 0 exch put pop		gsave		false charpath currentpoint		4 index setmatrix		stroke		grestore		moveto		2 copy rmoveto	} exch cshow	3 npop} def/jss{	4 1 roll	{		2 npop		(0) exch 2 copy 0 exch put		gsave		_sp eq		{			exch 6 index 6 index 6 index 5 -1 roll widthshow			currentpoint		}		{			false charpath currentpoint			4 index setmatrix stroke		} ifelse		grestore		moveto		2 copy rmoveto	} exch cshow	6 npop} def/sp{	{		2 npop (0) exch		2 copy 0 exch put pop		false charpath		2 copy rmoveto	} exch cshow	2 npop} def/jsp{	{		2 npop		(0) exch 2 copy 0 exch put		_sp eq		{			exch 5 index 5 index 5 index 5 -1 roll widthshow		}		{			false charpath		} ifelse		2 copy rmoveto	} exch cshow	5 npop} def/pl{	transform	0.25 sub round 0.25 add exch	0.25 sub round 0.25 add exch	itransform} def/setstrokeadjust where{	pop true setstrokeadjust	/c	{		curveto	} def	/C	/c load def	/v	{		currentpoint 6 2 roll curveto	} def	/V	/v load def	/y	{		2 copy curveto	} def	/Y	/y load def	/l	{		lineto	} def	/L	/l load def	/m	{		moveto	} def}{	/c	{		pl curveto	} def	/C	/c load def	/v	{		currentpoint 6 2 roll pl curveto	} def	/V	/v load def	/y	{		pl 2 copy curveto	} def	/Y	/y load def	/l	{		pl lineto	} def	/L	/l load def	/m	{		pl moveto	} def} ifelse/d{	setdash} def/cf{} def/i{	dup 0 eq	{		pop cf	} if	setflat} def/j{	setlinejoin} def/J{	setlinecap} def/M{	setmiterlimit} def/w{	setlinewidth} def/XR{	0 ne	/_eo exch ddef} def/H{} def/h{	closepath} def/N{	_pola 0 eq	{		_doClip 1 eq		{			_eo {eoclip} {clip} ifelse /_doClip 0 ddef		} if		newpath	}	{		/CRender		{			N		} ddef	} ifelse} def/n{	N} def/F{	_pola 0 eq	{		_doClip 1 eq		{			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc			/_doClip 0 ddef		}		{			_pf		} ifelse	}	{		/CRender		{			F		} ddef	} ifelse} def/f{	closepath	F} def/S{	_pola 0 eq	{		_doClip 1 eq		{			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc			/_doClip 0 ddef		}		{			_ps		} ifelse	}	{		/CRender		{			S		} ddef	} ifelse} def/s{	closepath	S} def/B{	_pola 0 eq	{		_doClip 1 eq		gsave F grestore		{			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc			/_doClip 0 ddef		}		{			S		} ifelse	}	{		/CRender		{			B		} ddef	} ifelse} def/b{	closepath	B} def/W{	/_doClip 1 ddef} def/*{	count 0 ne	{		dup type /stringtype eq		{			pop		} if	} if	newpath} def/u{} def/U{} def/q{	_pola 0 eq	{		gsave	} if} def/Q{	_pola 0 eq	{		grestore	} if} def/*u{	_pola 1 add /_pola exch ddef} def/*U{	_pola 1 sub /_pola exch ddef	_pola 0 eq	{		CRender	} if} def/D{	pop} def/*w{} def/*W{} def/`{	/_i save ddef	clipForward?	{		nulldevice	} if	6 1 roll 4 npop	concat pop	userdict begin	/showpage	{	} def	0 setgray	0 setlinecap	1 setlinewidth	0 setlinejoin	10 setmiterlimit	[] 0 setdash	/setstrokeadjust where {pop false setstrokeadjust} if	newpath	0 setgray	false setoverprint} def/~{ end	_i restore} def/O{	0 ne	/_of exch ddef	/_lp /none ddef} def/R{	0 ne	/_os exch ddef	/_lp /none ddef} def/g{	/_gf exch ddef	/_fc	{		_lp /fill ne		{			_of setoverprint			_gf setgray			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		ashow	} ddef	/_pjsf	{		_fc		awidthshow	} ddef	/_lp /none ddef} def/G{	/_gs exch ddef	/_sc	{		_lp /stroke ne		{			_os setoverprint			_gs setgray			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/k{	_cf astore pop	/_fc	{		_lp /fill ne		{			_of setoverprint			_cf aload pop setcmykcolor			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		ashow	} ddef	/_pjsf	{		_fc		awidthshow	} ddef	/_lp /none ddef} def/K{	_cs astore pop	/_sc	{		_lp /stroke ne		{			_os setoverprint			_cs aload pop setcmykcolor			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/x{	/_gf exch ddef	findcmykcustomcolor	/_if exch ddef	/_fc	{		_lp /fill ne		{			_of setoverprint			_if _gf 1 exch sub setcustomcolor			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		ashow	} ddef	/_pjsf	{		_fc		awidthshow	} ddef	/_lp /none ddef} def/X{	/_gs exch ddef	findcmykcustomcolor	/_is exch ddef	/_sc	{		_lp /stroke ne		{			_os setoverprint			_is _gs 1 exch sub setcustomcolor			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/A{	pop} def/annotatepage{userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse} def/XT {	pop pop} def/discard{	save /discardSave exch store	discardDict begin	/endString exch store	gt38?	{		2 add	} if	load	stopped	pop end	discardSave restore} bind defuserdict /discardDict 7 dict dup beginput/pre38Initialize{	/endStringLength endString length store	/newBuff buffer 0 endStringLength getinterval store	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store} def/shiftBuffer{	newBuff 0 newBuffButFirst putinterval	newBuffLast 0	currentfile read not	{	stop	} if	put} def0{	pre38Initialize	mark	currentfile newBuff readstring exch pop	{		{			newBuff endString eq			{				cleartomark stop			} if			shiftBuffer		} loop	}	{	stop	} ifelse} def1{	pre38Initialize	/beginString exch store	mark	currentfile newBuff readstring exch pop	{		{			newBuff beginString eq			{				/layerCount dup load 1 add store			}			{				newBuff endString eq				{					/layerCount dup load 1 sub store					layerCount 0 eq					{						cleartomark stop					} if				} if			} ifelse			shiftBuffer		} loop	} if} def2{	mark	{		currentfile buffer readline not		{		stop		} if		endString eq		{			cleartomark stop		} if	} loop} def3{	/beginString exch store	/layerCnt 1 store	mark	{		currentfile buffer readline not		{		stop		} if		dup beginString eq		{			pop /layerCnt dup load 1 add store		}		{			endString eq			{				layerCnt 1 eq				{					cleartomark stop				}				{					/layerCnt dup load 1 sub store				} ifelse			} if		} ifelse	} loop} defenduserdict /clipRenderOff 15 dict dup beginput{	/n /N /s /S /f /F /b /B}{	{		_doClip 1 eq		{			/_doClip 0 ddef _eo {eoclip} {clip} ifelse		} if		newpath	} def} forall/Tr /pop load def/Bb {} def/BB /pop load def/Bg {12 npop} def/Bm {6 npop} def/Bc /Bm load def/Bh {4 npop} defend/Lb{	4 npop	6 1 roll	pop	4 1 roll	pop pop pop	0 eq	{		0 eq		{			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard		}		{						/clipForward? true def						/Tx /pop load def			/Tj /pop load def						currentdict end clipRenderOff begin begin		} ifelse	}	{		0 eq		{			save /discardSave exch store		} if	} ifelse} bind def/LB{	discardSave dup null ne	{		restore	}	{		pop		clipForward?		{			currentdict		 end		 end		 begin								/clipForward? false ddef		} if	} ifelse} bind def/Pb{	pop pop	0 (%AI5_EndPalette) discard} bind def/Np{	0 (%AI5_End_NonPrinting--) discard} bind def/Ln /pop load def/Ap/pop load def/Ar{	72 exch div	0 dtransform dup mul exch dup mul add sqrt	dup 1 lt	{		pop 1	} if	setflat} def/Mb{	q} def/Md{} def/MB{	Q} def/nc 3 dict defnc begin/setgray{	pop} bind def/setcmykcolor{	4 npop} bind def/setcustomcolor{	2 npop} bind defcurrentdict readonly popendendsetpacking%%EndResource%%EndProlog%%BeginSetup%%IncludeFont: VerdanaAdobe_level2_AI5 /initialize get execAdobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_typography_AI5 /initialize get execAdobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_blend_AI5 /initialize get execAdobe_Illustrator_AI5 /initialize get exec[39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef/guillemotleft/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla/hungarumlaut/ogonek/caronTE%AI3_BeginEncoding: _Verdana Verdana[/_Verdana/Verdana 0 0 0 TZ%AI3_EndEncoding TrueType[161/degree 173/notequal 176/infinity/plusminus/lessequal/greaterequal181/mu/partialdiff/summation/product/pi/integral 189/Omega 195/radical 197/approxequal 198/Delta 214/divide/lozenge 240/apple/_Symbol_/Symbol 0 0 0 TZ%AI5_Begin_NonPrintingNp1 Bn%AI5_BeginGradient: (Unnamed gradient 1)(Unnamed gradient 1) 0 2 Bd[000<000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF>1 %_Br[0 0 50 100 %_Bs1 0 50 0 %_BsBD%AI5_EndGradient%AI5_End_NonPrinting--%AI5_BeginPalette0 0 Pb1 1 1 1 kPc0 0 0 0.8 kPcPB%AI5_EndPalette%%EndSetup%AI5_BeginLayer1 1 0 1 0 0 0 79 128 255 Lb(background) Ln1 A0 A1 Ap0 O0 0 0 0.8 k0 J 0 j 1 w 4 M []0 d3627 -387 m36.0005 -387 L36.0005 -36 L3627 -36 L3627 -387 Lf0 0 0 0.1 k387.0005 -747 m36.0005 -747 L36.0005 -396 L387.0005 -396 L387.0005 -747 Lf747.0005 -747 m396.0005 -747 L396.0005 -396 L747.0005 -396 L747.0005 -747 Lf1107.0005 -747 m756.0005 -747 L756.0005 -396 L1107.0005 -396 L1107.0005 -747 Lf1467.0005 -747 m1116.0005 -747 L1116.0005 -396 L1467.0005 -396 L1467.0005 -747 Lf1827.0005 -747 m1476.0005 -747 L1476.0005 -396 L1827.0005 -396 L1827.0005 -747 Lf2187 -747 m1836.0005 -747 L1836.0005 -396 L2187 -396 L2187 -747 Lf2547 -747 m2196 -747 L2196 -396 L2547 -396 L2547 -747 Lf2907 -747 m2556 -747 L2556 -396 L2907 -396 L2907 -747 Lf3267 -747 m2916 -747 L2916 -396 L3267 -396 L3267 -747 Lf3627 -747 m3276 -747 L3276 -396 L3627 -396 L3627 -747 Lf387.0005 -1107 m36.0005 -1107 L36.0005 -756 L387.0005 -756 L387.0005 -1107 Lf747.0005 -1107 m396.0005 -1107 L396.0005 -756 L747.0005 -756 L747.0005 -1107 Lf1107.0005 -1107 m756.0005 -1107 L756.0005 -756 L1107.0005 -756 L1107.0005 -1107 Lf1467.0005 -1107 m1116.0005 -1107 L1116.0005 -756 L1467.0005 -756 L1467.0005 -1107 Lf1827.0005 -1107 m1476.0005 -1107 L1476.0005 -756 L1827.0005 -756 L1827.0005 -1107 Lf2187 -1107 m1836.0005 -1107 L1836.0005 -756 L2187 -756 L2187 -1107 Lf2547 -1107 m2196 -1107 L2196 -756 L2547 -756 L2547 -1107 Lf2907 -1107 m2556 -1107 L2556 -756 L2907 -756 L2907 -1107 Lf3267 -1107 m2916 -1107 L2916 -756 L3267 -756 L3267 -1107 Lf3627 -1107 m3276 -1107 L3276 -756 L3627 -756 L3627 -1107 Lf387.0005 -1467 m36.0005 -1467 L36.0005 -1116 L387.0005 -1116 L387.0005 -1467 Lf747.0005 -1467 m396.0005 -1467 L396.0005 -1116 L747.0005 -1116 L747.0005 -1467 Lf1107.0005 -1467 m756.0005 -1467 L756.0005 -1116 L1107.0005 -1116 L1107.0005 -1467 Lf1467.0005 -1467 m1116.0005 -1467 L1116.0005 -1116 L1467.0005 -1116 L1467.0005 -1467 Lf1827.0005 -1467 m1476.0005 -1467 L1476.0005 -1116 L1827.0005 -1116 L1827.0005 -1467 Lf2187 -1467 m1836.0005 -1467 L1836.0005 -1116 L2187 -1116 L2187 -1467 Lf2547 -1467 m2196 -1467 L2196 -1116 L2547 -1116 L2547 -1467 Lf2907 -1467 m2556 -1467 L2556 -1116 L2907 -1116 L2907 -1467 Lf3267 -1467 m2916 -1467 L2916 -1116 L3267 -1116 L3267 -1467 Lf3627 -1467 m3276 -1467 L3276 -1116 L3627 -1116 L3627 -1467 Lf387.0005 -1827 m36.0005 -1827 L36.0005 -1476 L387.0005 -1476 L387.0005 -1827 Lf747.0005 -1827 m396.0005 -1827 L396.0005 -1476 L747.0005 -1476 L747.0005 -1827 Lf1107.0005 -1827 m756.0005 -1827 L756.0005 -1476 L1107.0005 -1476 L1107.0005 -1827 Lf1467.0005 -1827 m1116.0005 -1827 L1116.0005 -1476 L1467.0005 -1476 L1467.0005 -1827 Lf1827.0005 -1827 m1476.0005 -1827 L1476.0005 -1476 L1827.0005 -1476 L1827.0005 -1827 Lf2187 -1827 m1836.0005 -1827 L1836.0005 -1476 L2187 -1476 L2187 -1827 Lf2547 -1827 m2196 -1827 L2196 -1476 L2547 -1476 L2547 -1827 Lf2907 -1827 m2556 -1827 L2556 -1476 L2907 -1476 L2907 -1827 Lf3267 -1827 m2916 -1827 L2916 -1476 L3267 -1476 L3267 -1827 Lf3627 -1827 m3276 -1827 L3276 -1476 L3627 -1476 L3627 -1827 Lf387.0005 -2187 m36.0005 -2187 L36.0005 -1836 L387.0005 -1836 L387.0005 -2187 Lf747.0005 -2187 m396.0005 -2187 L396.0005 -1836 L747.0005 -1836 L747.0005 -2187 Lf1107.0005 -2187 m756.0005 -2187 L756.0005 -1836 L1107.0005 -1836 L1107.0005 -2187 Lf1467.0005 -2187 m1116.0005 -2187 L1116.0005 -1836 L1467.0005 -1836 L1467.0005 -2187 Lf1827.0005 -2187 m1476.0005 -2187 L1476.0005 -1836 L1827.0005 -1836 L1827.0005 -2187 Lf2187 -2187 m1836.0005 -2187 L1836.0005 -1836 L2187 -1836 L2187 -2187 Lf2547 -2187 m2196 -2187 L2196 -1836 L2547 -1836 L2547 -2187 Lf2907 -2187 m2556 -2187 L2556 -1836 L2907 -1836 L2907 -2187 Lf3267 -2187 m2916 -2187 L2916 -1836 L3267 -1836 L3267 -2187 Lf3627 -2187 m3276 -2187 L3276 -1836 L3627 -1836 L3627 -2187 LfLB%AI5_EndLayer--%AI5_BeginLayer1 1 0 1 0 0 2 79 255 79 Lb(eps_numbers) Ln1 A0 A0 To1 0 0 1 36 -414 0 TpTP0 Tr0 O0 0 0 0.8 k0 J 0 j 1 w 4 M []0 d/_Verdana 12 Tf0 Ts100 Tz-50 Tt1 TA%_ 0 XL36 0 XbXB0 0 5 TC100 100 200 TW0 0 0 Ti0 Ta0 1 2 2 3 Th0 Tq0 0 Tl-0.6 Tc0 Tw(001) Tx 1 0 Tk(\r) TX TO0 To1 0 0 1 396 -414 0 TpTP0 Tr(002) Tx 1 0 Tk(\r) TX TO0 To1 0 0 1 756 -414 0 TpTP0 Tr(003) Tx 1 0 Tk(\r) TX TO0 To1 0 0 1 1116 -414 0 TpTP0 Tr(004) Tx 1 0 Tk(\r) TX TO0 To1 0 0 1 1476 -414 0 TpTP0 Tr(005) Tx 1 0 Tk(\r) TX TO0 To1 0 0 1 1836 -414 0 TpTP0 Tr(006) Tx 1 0 Tk(\r) TX TO0 To1 0 0 1 2196 -414 0 TpTP0 Tr(007) Tx 1 0 Tk(\r) TX TO0 To1 0 0 1 2556 -414 0 TpTP0 Tr(008) Tx 1 0 Tk(\r) TX TO0 To1 0 0 1 2916 -414 0 TpTP0 Tr(009) Tx 1 0 Tk(\r) TX TO0 To1 0 0 1 3276 -414 0 TpTP0 Tr(010) Tx 1 0 Tk(\r) TX TO0 To1 0 0 1 3276 -774 0 TpTP0 Tr(020) Tx 1 0 Tk(\r) TX TO0 To1 0 0 1 3276 -1134 0 TpTP0 Tr(030) Tx 1 0 Tk(\r) TX TO0 To1 0 0 1 3276 -1494 0 TpTP0 Tr(040) Tx 1 0 Tk(\r) TX TO0 To1 0 0 1 3276 -1854 0 TpTP0 Tr(050) Tx 1 0 Tk(\r) TX TO0 To1 0 0 1 2916 -1854 0 TpTP0 Tr(049) Tx 1 0 Tk(\r) TX TO0 To1 0 0 1 2556 -1854 0 TpTP0 Tr(048) Tx 1 0 Tk(\r) TX TO0 To1 0 0 1 2196 -1854 0 TpTP0 Tr(047) Tx 1 0 Tk(\r) TX TO0 To1 0 0 1 1836.0005 -1854 0 TpTP0 Tr(046) Tx 1 0 Tk(\r) TX TO0 To1 0 0 1 1476.0005 -1854 0 TpTP0 Tr(045) Tx 1 0 Tk(\r) TX TO0 To1 0 0 1 1116.0005 -1854 0 TpTP0 Tr(044) Tx 1 0 Tk(\r) TX TO0 To1 0 0 1 756.0005 -1854 0 TpTP0 Tr(043) Tx 1 0 Tk(\r) TX TO0 To1 0 0 1 396.0005 -1854 0 TpTP0 Tr(042) Tx 1 0 Tk(\r) TX TO0 To1 0 0 1 36.0005 -1854 0 TpTP0 Tr(041) Tx 1 0 Tk(\r) TX TO0 To1 0 0 1 2916 -1494 0 TpTP0 Tr(039) Tx 1 0 Tk(\r) TX TO0 To1 0 0 1 2556 -1494 0 TpTP0 Tr(038) Tx 1 0 Tk(\r) TX TO0 To1 0 0 1 2196 -1494 0 TpTP0 Tr(037) Tx 1 0 Tk(\r) TX TO0 To1 0 0 1 1836.0005 -1494 0 TpTP0 Tr(036) Tx 1 0 Tk(\r) TX TO0 To1 0 0 1 1476.0005 -1494 0 TpTP0 Tr(035) Tx 1 0 Tk(\r) TX TO0 To1 0 0 1 1116.0005 -1494 0 TpTP0 Tr(034) Tx 1 0 Tk(\r) TX TO0 To1 0 0 1 756.0005 -1494 0 TpTP0 Tr(033) Tx 1 0 Tk(\r) TX TO0 To1 0 0 1 396.0005 -1494 0 TpTP0 Tr(032) Tx 1 0 Tk(\r) TX TO0 To1 0 0 1 36.0005 -1494 0 TpTP0 Tr(031) Tx 1 0 Tk(\r) TX TO0 To1 0 0 1 2916 -1134 0 TpTP0 Tr(029) Tx 1 0 Tk(\r) TX TO0 To1 0 0 1 2556 -1134 0 TpTP0 Tr(028) Tx 1 0 Tk(\r) TX TO0 To1 0 0 1 2196 -1134 0 TpTP0 Tr(027) Tx 1 0 Tk(\r) TX TO0 To1 0 0 1 1836.0005 -1134 0 TpTP0 Tr(026) Tx 1 0 Tk(\r) TX TO0 To1 0 0 1 1476.0005 -1134 0 TpTP0 Tr(025) Tx 1 0 Tk(\r) TX TO0 To1 0 0 1 1116.0005 -1134 0 TpTP0 Tr(024) Tx 1 0 Tk(\r) TX TO0 To1 0 0 1 756.0005 -1134 0 TpTP0 Tr(023) Tx 1 0 Tk(\r) TX TO0 To1 0 0 1 396.0005 -1134 0 TpTP0 Tr(022) Tx 1 0 Tk(\r) TX TO0 To1 0 0 1 36.0005 -1134 0 TpTP0 Tr(021) Tx 1 0 Tk(\r) TX TO0 To1 0 0 1 2916 -774 0 TpTP0 Tr(019) Tx 1 0 Tk(\r) TX TO0 To1 0 0 1 2556 -774 0 TpTP0 Tr(018) Tx 1 0 Tk(\r) TX TO0 To1 0 0 1 2196 -774 0 TpTP0 Tr(017) Tx 1 0 Tk(\r) TX TO0 To1 0 0 1 1836.0005 -774 0 TpTP0 Tr(016) Tx 1 0 Tk(\r) TX TO0 To1 0 0 1 1476.0005 -774 0 TpTP0 Tr(015) Tx 1 0 Tk(\r) TX TO0 To1 0 0 1 1116.0005 -774 0 TpTP0 Tr(014) Tx 1 0 Tk(\r) TX TO0 To1 0 0 1 756.0005 -774 0 TpTP0 Tr(013) Tx 1 0 Tk(\r) TX TO0 To1 0 0 1 396.0005 -774 0 TpTP0 Tr(012) Tx 1 0 Tk(\r) TX TO0 To1 0 0 1 36.0005 -774 0 TpTP0 Tr(011) Tx 1 0 Tk(\r) TX TOLB%AI5_EndLayer--%AI5_BeginLayer1 1 0 1 0 0 1 255 79 79 Lb(ywft_info) Ln1 A0 Au0 Ap0 O0.8 0 0 0 k0 J 0 j 1 w 4 M []0 d405 -180 m432 -180 L432 -160.1182 415.8828 -144 396 -144 C396 -171 L400.9707 -171 405 -175.0293 405 -180 Cf0 0 0 0.2 k495 -175.501 m495 -144 L468 -144 L468 -175.5 L468 -175.5 L468 -195.3828 484.1172 -211.5 504 -211.5 C504 -184.501 L499.0293 -184.501 495 -180.4717 495 -175.501 Cf463.5 -144 m436.5 -144 L436.5 -175.501 L436.5 -180.4717 432.4707 -184.501 427.5 -184.501 C396 -184.501 L396 -211.5 L427.5 -211.5 L447.3828 -211.5 463.5 -195.3828 463.5 -175.5 C463.5 -175.5 L463.5 -144 Lf652.5 -144 m679.5 -144 L679.5 -175.501 L679.5 -180.4717 683.5293 -184.501 688.5 -184.501 C720 -184.501 L720 -211.5 L688.5 -211.5 L668.6172 -211.5 652.5 -195.3828 652.5 -175.5 C652.5 -175.5 L652.5 -144 Lf580.5 -211.5 m607.5 -211.5 L607.5 -180 L607.5 -175.0293 611.5293 -171 616.5 -171 C648 -171 L648 -144 L616.5 -144 L596.6172 -144 580.5 -160.1182 580.5 -180 C580.5 -180 L580.5 -211.5 Lf531 -175.501 m531 -144 L504 -144 L504 -175.5 L504 -175.5 L504 -195.3828 520.1172 -211.5 540 -211.5 C540 -184.501 L535.0293 -184.501 531 -180.4717 531 -175.501 Cf567 -175.501 m567 -144 L540 -144 L540 -175.5 L540 -175.5 L540 -195.3828 556.1172 -211.5 576 -211.5 C576 -184.501 L571.0293 -184.501 567 -180.4717 567 -175.501 Cf612 -211.5 m648 -211.5 L648 -184.5 L612 -184.5 L612 -211.5 Lf684 -144 m684 -171 L720 -171 L720 -144 L684 -144 LfU0 To1 0 0 1 396 -297 0 TpTP0 Tr/_Verdana 12 Tf0 Ts100 Tz-50 Tt1 TA%_ 0 XL36 0 XbXB0 0 5 TC100 100 200 TW0 0 0 Ti0 Ta0 1 2 2 3 Th0 Tq0 0 Tl-0.6 Tc0 Tw(Y) Tx 1 63 Tk(ouW) Tx 1 49 Tk(orkF) Tx 1 24 Tk(orThem \(100%=91pt.\)) Tx 1 0 Tk(\r) TX TO0 To1 0 0 1 396 -72 0 TpTP0 Tr0 0 0 0.6 k/_Verdana 11 Tf-0.55 Tc(YWF) Tx 1 -15 Tk(T) Tx 1 0 Tk(\r) TX TO0 To1 0 0 1 1476 -297 0 TpTP0 Tr0 0 0 0.2 k/_Verdana 12 Tf-0.6 Tc(E00) Tx 1 0 Tk(32) Tx 1 0 Tk(\r) TX TO0 To1 0 0 1 1476 -72 0 TpTP0 Tr0 0 0 0.6 k/_Verdana 11 Tf-0.55 Tc(YWF) Tx 1 -15 Tk(T) Tx 1 0 Tk(\r) TX TO0 To1 0 0 1 1836.0005 -297 0 TpTP0 Tr0 0 0 0.2 k/_Verdana 12 Tf-0.6 Tc(Arrows) Tx 1 0 Tk(\r) TX TO0 To1 0 0 1 1836.0005 -72 0 TpTP0 Tr0 0 0 0.6 k/_Verdana 11 Tf-0.55 Tc(YWF) Tx 1 -15 Tk(T) Tx 1 0 Tk(\r) TX TO0 To1 0 0 1 2196 -297 0 TpTP0 Tr0 0 0 0.2 k/_Verdana 12 Tf-0.6 Tc(0) Tx 1 0 Tk(6) Tx 1 0 Tk(\r) TX TO0 To1 0 0 1 2196 -72 0 TpTP0 Tr0 0 0 0.6 k/_Verdana 11 Tf-0.55 Tc(YWF) Tx 1 -15 Tk(T) Tx 1 0 Tk(\r) TX TOu0.8 0 0 0 k398.25 -2241 m405 -2241 L405 -2236.0293 400.9707 -2232 396 -2232 C396 -2238.75 L397.2422 -2238.75 398.25 -2239.7568 398.25 -2241 Cf0 0 0 0.8 k420.75 -2239.875 m420.75 -2232 L414 -2232 L414 -2239.875 L414 -2239.875 L414 -2244.8457 418.0293 -2248.875 423 -2248.875 C423 -2242.125 L421.7578 -2242.125 420.75 -2241.1182 420.75 -2239.875 Cf412.875 -2232 m406.125 -2232 L406.125 -2239.875 L406.125 -2241.1182 405.1172 -2242.125 403.875 -2242.125 C396 -2242.125 L396 -2248.875 L403.875 -2248.875 L408.8457 -2248.875 412.875 -2244.8457 412.875 -2239.875 C412.875 -2239.875 L412.875 -2232 Lf460.125 -2232 m466.875 -2232 L466.875 -2239.875 L466.875 -2241.1182 467.8828 -2242.125 469.125 -2242.125 C477 -2242.125 L477 -2248.875 L469.125 -2248.875 L464.1543 -2248.875 460.125 -2244.8457 460.125 -2239.875 C460.125 -2239.875 L460.125 -2232 Lf442.125 -2248.875 m448.875 -2248.875 L448.875 -2241 L448.875 -2239.7568 449.8828 -2238.75 451.125 -2238.75 C459 -2238.75 L459 -2232 L451.125 -2232 L446.1543 -2232 442.125 -2236.0293 442.125 -2241 C442.125 -2241 L442.125 -2248.875 Lf429.75 -2239.875 m429.75 -2232 L423 -2232 L423 -2239.875 L423 -2239.875 L423 -2244.8457 427.0293 -2248.875 432 -2248.875 C432 -2242.125 L430.7578 -2242.125 429.75 -2241.1182 429.75 -2239.875 Cf438.75 -2239.875 m438.75 -2232 L432 -2232 L432 -2239.875 L432 -2239.875 L432 -2244.8457 436.0293 -2248.875 441 -2248.875 C441 -2242.125 L439.7578 -2242.125 438.75 -2241.1182 438.75 -2239.875 Cf450 -2248.875 m459 -2248.875 L459 -2242.125 L450 -2242.125 L450 -2248.875 Lf468 -2232 m468 -2238.75 L477 -2238.75 L477 -2232 L468 -2232 LfU0 To1 0 0 1 396 -2277 0 TpTP0 Tr/_Verdana 7 Tf-0.35 Tc(Y) Tx 1 63 Tk(ouW) Tx 1 49 Tk(orkF) Tx 1 24 Tk(orThem \(25%=23pt.\)) Tx 1 0 Tk(\r) TX TOLB%AI5_EndLayer--%AI5_BeginLayer1 1 1 1 0 0 3 79 79 255 Lb(eps_files) Ln0 A0 O0 0 0 0.8 k0 J 0 j 1 w 4 M []0 d3499.334 -566.3762 m3499.334 -512.2307 L3445.1875 -458.0852 L3391.043 -512.2307 L3391.043 -566.3762 L3336.8965 -620.5217 L3336.8965 -674.6672 L3391.043 -674.6672 L3445.1875 -620.5217 L3499.334 -674.6672 L3553.4805 -674.6672 L3553.4805 -620.5217 L3499.334 -566.3762 Lf*u1 D189.5701 -978.582 m189.5701 -1057.7739 L215.9675 -1031.3765 L242.3645 -1057.7739 L242.3645 -978.582 L215.9675 -952.1846 L189.5701 -978.582 Lf215.9675 -820.1992 m189.5701 -846.5967 L189.5701 -872.9941 L215.9675 -846.5967 L242.3645 -872.9941 L242.3645 -846.5967 L215.9675 -820.1992 Lf189.5701 -899.3911 m189.5701 -952.1846 L215.9675 -925.7886 L242.3645 -952.1846 L242.3645 -899.3911 L215.9675 -872.9941 L189.5701 -899.3911 Lf*U*u492.3354 -891.2568 m492.3354 -929.4399 L568.7026 -910.3486 L645.0706 -929.4399 L645.0706 -891.2568 L568.7026 -872.165 L492.3354 -891.2568 Lf492.3354 -948.5317 m492.3354 -1043.9917 L645.0706 -1043.9917 L645.0706 -948.5317 L568.7026 -929.4399 L492.3354 -948.5317 Lf568.7026 -833.981 m492.3354 -853.0728 L492.3354 -872.165 L568.7026 -853.0728 L645.0706 -872.165 L645.0706 -853.0728 L568.7026 -833.981 Lf*U0 D1046.959 -968.0669 m926.4561 -847.5649 L805.9531 -968.0669 L791.6938 -982.3315 791.6938 -1005.4482 805.9531 -1019.71 c820.2153 -1033.9727 843.3369 -1033.9751 857.5962 -1019.71 C926.4556 -950.8516 L995.3145 -1019.71 L1009.5771 -1033.9751 1032.6963 -1033.9727 1046.959 -1019.71 c1061.2207 -1005.4482 1061.2207 -982.3315 1046.959 -968.0669 Cf0.2 g2120.0562 -1665.5737 m2007.8745 -1557.1191 L1933.0908 -1629.4204 L1895.6973 -1665.5703 L1875.0483 -1685.5425 1875.0483 -1717.9077 1895.6973 -1737.875 c1916.3511 -1757.8472 1949.834 -1757.8472 1970.4834 -1737.875 C2007.876 -1701.7236 L2045.2705 -1737.8789 L2065.9268 -1757.8472 2099.4028 -1757.8472 2120.0518 -1737.8789 c2140.7129 -1717.9077 2140.7129 -1685.5425 2120.0562 -1665.5737 Cf0 0 0 0.8 k2007.8799 -472.9514 m1918.0889 -652.5325 L1938.0322 -632.6663 1964.5869 -619.3684 V1968.3379 -633.2463 1978.5684 -644.4358 1991.8281 -649.5325 C1994.6572 -655.5823 2000.7568 -659.801 2007.8799 -659.801 c2015.002 -659.801 2021.0996 -655.5823 2023.9307 -649.5325 C2037.1914 -644.4358 2047.4219 -633.2463 2051.1719 -619.3684 C2077.7266 -632.6663 2097.6699 -652.5325 Y2007.8799 -472.9514 Lf*u1 D2322.7378 -533.5454 m2329.9917 -535.4707 2337.7271 -533.7671 2343.4966 -529.1006 C2346.9712 -529.4019 2350.4712 -527.7417 2352.3325 -524.5215 c2354.1909 -521.2983 2353.8755 -517.4414 2351.8794 -514.5806 C2353.0366 -507.252 2350.646 -499.7012 2345.3481 -494.3838 C2358.2993 -485.8452 2372.4888 -482.0142 Y2267.8188 -475.7285 L2325.5952 -563.2363 L2321.8188 -549.0264 2322.7378 -533.5454 Vf2380.8755 -564.8032 m2379.397 -561.644 2376.2104 -559.4404 2372.4907 -559.4404 c2368.7729 -559.4404 2365.5864 -561.644 2364.1079 -564.8032 C2357.1831 -567.4653 2351.8413 -573.3086 2349.8823 -580.5562 C2336.0122 -573.6094 2325.5981 -563.2363 Y2372.4907 -657.0239 L2419.3843 -563.2363 L2408.9712 -573.6094 2395.1021 -580.5562 V2393.1421 -573.3086 2387.8003 -567.4653 2380.8755 -564.8032 Cf2372.4907 -482.0142 m2386.6841 -485.8452 2399.6323 -494.3838 V2394.3364 -499.7012 2391.9429 -507.252 2393.1011 -514.5806 C2391.106 -517.4414 2390.7886 -521.2983 2392.647 -524.5215 c2394.5093 -527.7417 2398.0112 -529.4019 2401.4849 -529.1006 C2407.2524 -533.7671 2414.9878 -535.4707 2422.2437 -533.5454 C2423.1606 -549.0264 2419.3843 -563.2363 Y2477.1606 -475.7285 L2372.4907 -482.0142 Lf*U*u568.7017 -447.1089 m449.4368 -566.376 L568.7017 -685.6436 L687.9692 -566.376 L568.7017 -447.1089 Lf0 D583.6108 -521.6514 m583.6108 -640.9194 L568.7017 -655.8257 L553.7944 -640.9194 L553.7944 -521.6514 L523.9766 -551.4668 L509.0703 -536.5605 L568.7017 -476.9263 L628.335 -536.5605 L613.4263 -551.4668 L583.6108 -521.6514 Lf*U*u1 D3056.1279 -471.6672 m3054.668 -470.2073 3052.6289 -469.4778 3050.5732 -469.6804 c3048.5156 -469.8845 3046.6602 -470.9993 3045.5156 -472.7175 C2995.873 -547.1814 L2993.7617 -550.3484 2994.6162 -554.6311 2997.7852 -556.7419 c3000.9531 -558.8538 3005.2354 -557.9998 3007.3467 -554.8303 C3044.6641 -498.8533 3052.3242 -487.3635 V3058.4648 -493.5076 3066.6602 -501.7 3069.1787 -504.2185 C3069.1787 -509.7454 3069.1787 -675.1116 Y3069.1787 -678.9197 3072.2656 -682.0061 3076.0732 -682.0061 c3079.8818 -682.0061 3082.9688 -678.9197 3082.9688 -675.1116 C3082.9688 -501.3635 L3082.9688 -499.5344 3082.2412 -497.7815 3080.9482 -496.4885 C3056.1279 -471.6672 Lf3181.0947 -547.1814 m3131.4521 -472.7175 L3130.3086 -470.9993 3128.4521 -469.8845 3126.3945 -469.6804 c3124.3389 -469.4778 3122.3008 -470.2073 3120.8408 -471.6672 C3096.0195 -496.4885 L3094.7275 -497.7815 3094 -499.5344 3094 -501.3635 C3094 -675.1116 L3094 -678.9197 3097.0869 -682.0061 3100.8945 -682.0061 c3104.7031 -682.0061 3107.7891 -678.9197 3107.7891 -675.1116 C3107.7891 -509.7454 3107.7891 -504.2185 V3110.3105 -501.7 3118.5029 -493.5076 3124.6445 -487.3635 C3132.3037 -498.8533 3169.6211 -554.8303 Y3171.7334 -557.9978 3176.0146 -558.8538 3179.1826 -556.7419 c3182.3496 -554.6311 3183.2061 -550.3484 3181.0947 -547.1814 Cf3114.2803 -450.7463 m3113.7412 -450.2073 3112.8691 -450.2073 3112.3301 -450.7463 C3090.2832 -472.7932 3088.4844 -474.5925 V3086.6846 -472.7932 3064.6377 -450.7463 Y3064.0986 -450.2073 3063.2266 -450.2073 3062.6875 -450.7463 c3062.1494 -451.2854 3062.1494 -452.1575 3062.6875 -452.6965 C3087.5088 -477.5173 L3088.0479 -478.0554 3088.9199 -478.0554 3089.459 -477.5173 C3114.2803 -452.6965 L3114.8184 -452.1575 3114.8184 -451.2854 3114.2803 -450.7463 cf*U*u1613.9932 -892.7095 m1652.5576 -892.7095 L1691.1221 -892.7095 L1691.1221 -884.9966 L1652.5576 -869.5708 L1613.9932 -884.9966 L1613.9932 -892.7095 Lf1613.9932 -1008.4019 m1652.5576 -1023.8276 L1691.1221 -1008.4019 L1691.1221 -931.2729 L1652.5576 -915.8481 L1613.9932 -931.2729 L1613.9932 -1008.4019 Lf1613.9932 -915.8481 m1652.5576 -915.8481 L1691.1221 -915.8481 L1691.1221 -908.1353 L1652.5576 -892.7095 L1613.9932 -908.1353 L1613.9932 -915.8481 Lf1691.1221 -838.7192 m1652.5576 -823.2935 L1613.9932 -838.7192 L1613.9932 -846.4321 L1652.5576 -846.4321 L1691.1221 -846.4321 L1691.1221 -838.7192 Lf1613.9932 -869.5708 m1652.5576 -869.5708 L1691.1221 -869.5708 L1691.1221 -861.8579 L1652.5576 -846.4321 L1613.9932 -861.8579 L1613.9932 -869.5708 Lf1613.9932 -1016.1147 m1613.9932 -1031.5405 L1652.5576 -1054.6792 L1691.1221 -1031.5405 L1691.1221 -1016.1147 L1652.5576 -1031.5405 L1613.9932 -1016.1147 Lf*U*u1737.9287 -479.729 m1653.1309 -500.9297 1652.5566 -501.0718 V1651.9824 -500.9297 1565.7083 -479.3589 Y1565.7083 -588.8882 L1652.5566 -610.6006 L1739.4063 -588.8882 L1739.4063 -479.3589 L1737.9287 -479.729 Lfu1652.5566 -629.562 m1651.9824 -629.4199 1565.7083 -607.8491 Y1565.7083 -653.3936 L1739.4063 -653.3936 L1739.4063 -607.8491 L1737.9287 -608.2188 L1653.1309 -629.4199 1652.5566 -629.562 Vf0 D1737.0273 -651.0142 m1568.0872 -651.0142 L1568.0872 -610.8984 L1570.9431 -611.6113 1652.5566 -632.0156 Y1652.8447 -631.9438 L1734.1709 -611.6113 1737.0273 -610.8984 V1737.0273 -651.0142 LfU*U*u1 D926.457 -484.4353 m879.6338 -437.6121 L879.6338 -461.0237 L926.457 -507.8469 L973.2803 -461.0237 L973.2803 -437.6121 L926.457 -484.4353 Lf879.6338 -484.4353 m879.6338 -624.9055 L903.0454 -648.3171 L926.457 -695.1404 L949.8687 -648.3171 L973.2803 -624.9055 L973.2803 -484.4353 L926.457 -531.2585 L879.6338 -484.4353 Lf*U0 D1359.4739 -530.2136 m1359.4739 -494.0515 L1323.3118 -530.2136 L1323.3118 -494.0515 L1287.1487 -457.8884 L1250.9866 -494.0515 L1250.9866 -530.2136 L1214.8235 -494.0515 L1214.8235 -530.2136 L1250.9866 -566.3757 L1250.9866 -602.5388 L1214.8235 -566.3757 L1214.8235 -602.5388 L1287.1487 -674.864 L1359.4739 -602.5388 L1359.4739 -566.3757 L1323.3118 -602.5388 L1323.3118 -566.3757 L1359.4739 -530.2136 Lf*u1 D2799.3076 -536.2573 m2775.0234 -511.9736 L2773.4424 -510.3921 2770.8809 -510.3921 2769.2998 -511.9736 C2752.3311 -528.9404 2747.8779 -533.3955 V2745.8203 -531.3379 2738.4688 -523.9863 2729.3164 -514.835 C2739.8809 -504.2744 2750.7393 -493.4131 Y2751.5166 -492.6348 2751.9248 -491.5996 2751.9248 -490.5513 c2751.9248 -489.9346 2751.7852 -489.3149 2751.498 -488.7407 C2727.2139 -440.1729 L2726.5293 -438.8022 2725.127 -437.936 2723.5938 -437.936 c2722.0605 -437.936 2720.6582 -438.8022 2719.9736 -440.1729 C2695.6895 -488.7407 L2695.4023 -489.3149 2695.2627 -489.9346 2695.2627 -490.5513 c2695.2627 -491.5996 2695.6709 -492.6348 2696.4482 -493.4131 C2707.3076 -504.2744 2717.8701 -514.835 V2708.7188 -523.9863 2701.3672 -531.3379 2699.3096 -533.3955 C2694.8564 -528.9404 2677.8877 -511.9736 Y2676.3066 -510.3921 2673.7451 -510.3921 2672.1641 -511.9736 C2647.8799 -536.2573 L2647.1211 -537.0161 2646.6943 -538.0469 2646.6943 -539.1191 C2646.6943 -653.6626 L2646.6943 -655.1851 2647.5479 -656.5767 2648.9053 -657.27 C2721.7568 -694.3755 L2722.9111 -694.9629 2724.2764 -694.9629 2725.4297 -694.3755 C2798.2822 -657.27 L2799.6387 -656.5767 2800.4932 -655.1851 2800.4932 -653.6626 C2800.4932 -539.1191 L2800.4932 -538.0469 2800.0664 -537.0161 2799.3076 -536.2573 Cf0 D2704.2344 -489.7524 m2706.2021 -485.8159 2718.6816 -460.8545 2723.5938 -451.0342 C2728.5059 -460.8545 2740.9844 -485.8159 2742.9531 -489.7524 C2741.3799 -491.3257 2733.1377 -499.5654 2723.5938 -509.1118 C2714.0498 -499.5654 2705.8076 -491.3257 2704.2344 -489.7524 Cf2792.3984 -651.1826 m2788.3506 -653.2437 2726.9766 -684.502 2723.5938 -686.2251 C2720.21 -684.502 2658.8369 -653.2437 2654.7891 -651.1826 C2654.7891 -646.5029 2654.7891 -543.9805 2654.7891 -540.7949 C2656.667 -538.9165 2670.8174 -524.7666 2675.0254 -520.5581 C2679.4785 -525.0142 2696.4482 -541.981 Y2698.0293 -543.5615 2700.5908 -543.5615 2702.1719 -541.981 C2713.0332 -531.1221 2723.5938 -520.5581 V2734.1543 -531.1221 2745.0156 -541.981 Y2746.5967 -543.5615 2749.1582 -543.5615 2750.7393 -541.981 C2767.709 -525.0142 2772.1621 -520.5581 V2776.3691 -524.7666 2790.5195 -538.9165 2792.3984 -540.7949 C2792.3984 -543.9805 2792.3984 -646.5029 2792.3984 -651.1826 Cf*U237.6968 -501.1873 m237.6968 -522.9172 L226.832 -501.1873 L215.9673 -522.9172 L205.1025 -501.1873 L194.2375 -522.9172 L194.2375 -501.1873 L107.3191 -544.6467 L107.3191 -631.5652 L194.2375 -588.1062 L237.6968 -588.1062 L324.6155 -631.5652 L324.6155 -544.6467 L237.6968 -501.1873 Lf3121.3457 -832.1851 m3203.501 -914.3413 L3211.7168 -906.1245 L3211.7168 -873.2632 L3154.208 -815.7534 L2981.6816 -815.7534 L2965.251 -832.1812 L2965.251 -1004.7095 L3022.7598 -1062.2192 L3055.6221 -1062.2192 L3063.8369 -1054.0044 L2981.6816 -971.8481 L2981.6816 -996.4946 L2973.4668 -996.4946 L2973.4668 -955.4165 L3080.2686 -1062.2192 L3129.5615 -1062.2192 L3162.4238 -1029.3599 L3014.5439 -881.478 L2998.1133 -881.478 L2998.1133 -930.77 L2981.6816 -930.77 L2981.6816 -832.1851 L3080.2686 -832.1851 L3080.2686 -848.6167 L3030.9756 -848.6167 L3030.9756 -865.0464 L3178.8545 -1012.9263 L3211.7168 -980.063 L3211.7168 -930.77 L3104.915 -823.9702 L3145.9922 -823.9702 L3145.9922 -832.1851 L3121.3457 -832.1851 Lfu*u0.2 g1270.7175 -1293.5869 m1287.1482 -1310.0186 L1303.5789 -1293.5869 L1303.5789 -1277.1553 L1270.7175 -1277.1553 L1270.7175 -1293.5869 Lf1 D1300.9968 -1323.8662 m1290.8167 -1334.0474 1287.1482 -1337.7158 V1283.4797 -1334.0474 1273.2996 -1323.8662 Y1271.8733 -1322.4404 1269.5618 -1322.4404 1268.1355 -1323.8662 c1266.7097 -1325.292 1266.7097 -1327.604 1268.1355 -1329.0303 C1284.5662 -1345.4619 L1285.2507 -1346.1465 1286.1794 -1346.5313 1287.1482 -1346.5313 c1288.1165 -1346.5313 1289.0452 -1346.1465 1289.7302 -1345.4619 C1306.1609 -1329.0303 L1307.5867 -1327.604 1307.5867 -1325.292 1306.1604 -1323.8662 c1304.7346 -1322.4404 1302.4226 -1322.4404 1300.9968 -1323.8662 Cfu1320.0105 -1224.2109 m1318.6284 -1224.2109 1317.4399 -1224.9883 1316.8201 -1226.1206 C1306.0869 -1226.627 1296.0112 -1229.6616 1287.1482 -1234.6211 C1278.2852 -1229.6616 1268.2095 -1226.627 1257.4763 -1226.1206 C1256.8564 -1224.9883 1255.668 -1224.2109 1254.2859 -1224.2109 c1216.0325 -1224.2109 1184.9109 -1255.333 1184.9109 -1293.5869 c1184.9109 -1295.6035 1186.5457 -1297.2383 1188.5623 -1297.2383 c1190.5789 -1297.2383 1192.2136 -1295.6035 1192.2136 -1293.5869 c1192.2136 -1259.3594 1220.0588 -1231.5137 1254.2859 -1231.5137 c1255.6003 -1231.5137 1256.7427 -1230.813 1257.3857 -1229.7705 C1266.7676 -1230.2285 1275.6106 -1232.7432 1283.5149 -1236.8311 C1264.8635 -1248.8662 1252.4602 -1269.7861 1252.4602 -1293.5869 C1252.4602 -1294.3433 L1287.1482 -1329.0303 L1321.8362 -1294.3433 L1321.8362 -1293.5869 L1321.8362 -1269.7861 1309.4324 -1248.8662 1290.781 -1236.8311 C1298.6858 -1232.7432 1307.5283 -1230.2285 1316.9106 -1229.7705 C1317.5537 -1230.813 1318.696 -1231.5137 1320.0105 -1231.5137 c1354.2375 -1231.5137 1382.0837 -1259.3594 1382.0837 -1293.5869 c1382.0837 -1295.6035 1383.7185 -1297.2383 1385.7351 -1297.2383 c1387.7517 -1297.2383 1389.3865 -1295.6035 1389.3865 -1293.5869 c1389.3865 -1255.333 1358.2644 -1224.2109 1320.0105 -1224.2109 cf0 D1318.1482 -1292.8672 m1317.0891 -1293.9258 1289.488 -1321.5264 1287.1482 -1323.8662 C1284.8083 -1321.5264 1257.2068 -1293.9263 1256.1477 -1292.8672 C1256.405 -1269.9619 1268.7834 -1249.9653 1287.1482 -1238.8887 C1305.5125 -1249.9653 1317.8914 -1269.9619 1318.1482 -1292.8672 CfU1 D1302.2878 -1341.5889 m1289.3401 -1354.5371 1287.1482 -1356.7295 V1284.9558 -1354.5371 1272.0085 -1341.5889 Y1271.2957 -1340.876 1270.1394 -1340.876 1269.4265 -1341.5889 c1268.7136 -1342.3018 1268.7136 -1343.458 1269.4265 -1344.1709 C1285.8572 -1360.6025 L1286.1995 -1360.9448 1286.6638 -1361.1372 1287.1482 -1361.1372 c1287.6321 -1361.1372 1288.0969 -1360.9448 1288.4392 -1360.6025 C1304.8699 -1344.1709 L1305.5828 -1343.458 1305.5828 -1342.3018 1304.8699 -1341.5889 c1304.1565 -1340.876 1303.0007 -1340.876 1302.2878 -1341.5889 Cf*UU*u0 0 0 0.8 k975.136 -1233.7471 m975.136 -1232.6851 L926.457 -1184.0078 L877.7778 -1232.6851 L877.7778 -1233.7471 L877.7778 -1267.1475 895.1841 -1296.5054 921.3582 -1313.395 C909.051 -1319.7593 895.125 -1323.4185 880.3401 -1323.4185 C877.7778 -1323.4185 L877.7778 -1401.3408 L882.1516 -1396.9678 L891.7854 -1387.335 902.0884 -1377.0317 V903.7952 -1377.4824 905.6843 -1377.0605 907.0227 -1375.7231 C921.3088 -1361.4346 926.457 -1356.2871 V931.605 -1361.4346 945.8928 -1375.7231 Y947.2302 -1377.0605 949.1194 -1377.4824 950.8257 -1377.0317 C963.0022 -1389.207 975.136 -1401.3408 Y975.136 -1323.4185 L972.574 -1323.4185 L957.7883 -1323.4185 943.863 -1319.7593 931.5552 -1313.395 C957.7292 -1296.5054 975.136 -1267.1475 975.136 -1233.7471 Cf0 D970.012 -1328.4136 m970.012 -1332.5225 970.012 -1379.1094 970.012 -1388.9712 C967.4902 -1386.4497 961.3474 -1380.3071 954.4485 -1373.4082 C954.8994 -1371.7021 954.4773 -1369.8135 953.1396 -1368.4761 C930.0806 -1345.417 L929.1191 -1344.4561 927.8159 -1343.916 926.457 -1343.916 c925.0974 -1343.916 923.7942 -1344.4561 922.8335 -1345.417 C899.7756 -1368.4761 L898.4387 -1369.8135 898.0161 -1371.7007 898.4663 -1373.4067 C891.6516 -1380.2207 885.4888 -1386.3838 882.9021 -1388.9712 C882.9021 -1379.1094 882.9021 -1332.5225 882.9021 -1328.4136 C898.676 -1327.9888 913.4988 -1323.7461 926.457 -1316.4961 C939.4146 -1323.7461 954.238 -1327.9888 970.012 -1328.4136 Cf926.457 -1310.5073 m900.6851 -1294.9624 883.314 -1266.9009 882.9526 -1234.7568 C883.6812 -1234.0293 893.3435 -1224.3677 903.3992 -1214.3115 C903.3992 -1210.6904 L926.457 -1187.6313 L949.5161 -1210.6904 L949.5161 -1214.3125 L959.5713 -1224.3677 969.2329 -1234.0293 969.9607 -1234.7568 C969.6001 -1266.9009 952.2283 -1294.9624 926.457 -1310.5073 Cf*U926.457 -1210.6904 m949.5161 -1233.7471 L949.5161 -1214.3125 L949.5161 -1210.6904 L926.457 -1187.6313 L903.3992 -1210.6904 L903.3992 -1214.3115 L903.3992 -1233.7471 L926.457 -1210.6904 Lf*u1 D2431.7588 -1204.0645 m2267.4482 -1368.375 L2280.3574 -1381.2842 L2444.668 -1216.9736 L2431.7588 -1204.0645 Lf2342.2095 -1213.1006 m2337.0454 -1207.9365 L2254.8901 -1290.0908 L2260.0542 -1295.2549 L2342.2095 -1213.1006 Lf2400.188 -1205.3545 m2252.3081 -1353.2334 L2262.6362 -1363.5615 L2410.5161 -1215.6826 L2400.188 -1205.3545 Lf2257.4722 -1210.5186 m2257.4722 -1226.9502 L2273.9028 -1210.5186 L2257.4722 -1210.5186 Lf2308.0562 -1211.8096 m2305.4741 -1209.2275 L2256.1812 -1258.5205 L2258.7632 -1261.1025 L2308.0562 -1211.8096 Lf2376.3628 -1214.3916 m2368.6167 -1206.6455 L2253.5991 -1321.6631 L2261.3452 -1329.4092 L2376.3628 -1214.3916 Lf2402.77 -1372.2471 m2407.9341 -1377.4111 L2490.0894 -1295.2549 L2484.9253 -1290.0908 L2402.77 -1372.2471 Lf2436.9224 -1373.5381 m2439.5044 -1376.1201 L2488.7983 -1326.8271 L2486.2163 -1324.2451 L2436.9224 -1373.5381 Lf2368.6167 -1370.9561 m2376.3628 -1378.7021 L2491.3804 -1263.6846 L2483.6343 -1255.9385 L2368.6167 -1370.9561 Lf2487.5073 -1374.8291 m2487.5073 -1358.3975 L2471.0757 -1374.8291 L2487.5073 -1374.8291 Lf2482.3433 -1221.7861 m2334.4634 -1369.665 L2344.7915 -1379.9932 L2492.6714 -1232.1143 L2482.3433 -1221.7861 Lf2464.6211 -1204.0645 m2300.3105 -1368.375 L2313.2197 -1381.2842 L2477.5303 -1216.9736 L2464.6211 -1204.0645 Lf*U*u1951.4395 -1218.7354 m1950.2236 -1218.7354 1940.3262 -1218.7329 1937.5908 -1218.7324 C1937.5908 -1221.1152 1937.5908 -1284.8081 1937.5908 -1326.769 C1939.7168 -1327.5215 1941.2422 -1329.5439 1941.2422 -1331.9277 C1941.2422 -1351.707 1941.2422 -1359.314 V1948.8486 -1359.314 1968.627 -1359.314 Y1971.0107 -1359.314 1973.0332 -1360.8394 1973.7861 -1362.9653 C2015.7451 -1362.9653 2079.4365 -1362.9653 2081.8193 -1362.9653 C2081.8193 -1360.2295 2081.8193 -1350.332 2081.8193 -1349.1157 C2080.7627 -1348.0591 1952.4951 -1219.792 1951.4395 -1218.7354 Cn0 D1952.1953 -1348.3594 m1952.1953 -1249.7734 L2050.7822 -1348.3594 L1952.1953 -1348.3594 Ln2071.0859 -1352.2324 m2068.9473 -1354.3711 2065.4795 -1354.3711 2063.3398 -1352.2324 C1948.3223 -1237.2148 L1946.1836 -1235.0757 1946.1836 -1231.6079 1948.3223 -1229.4688 c1950.4619 -1227.3301 1953.9297 -1227.3301 1956.0684 -1229.4688 C2071.0859 -1344.4863 L2073.2246 -1346.6255 2073.2246 -1350.0933 2071.0859 -1352.2324 cn*U*u1 D0 O0.2 g1952.1953 -1348.3594 m2050.7822 -1348.3594 L1952.1953 -1249.7734 L1952.1953 -1348.3594 Lf1948.3223 -1229.4688 m1946.1836 -1231.6079 1946.1836 -1235.0757 1948.3223 -1237.2148 C2063.3398 -1352.2324 L2065.4795 -1354.3711 2068.9473 -1354.3711 2071.0859 -1352.2324 c2073.2246 -1350.0933 2073.2246 -1346.6255 2071.0859 -1344.4863 C1956.0684 -1229.4688 L1953.9297 -1227.3301 1950.4619 -1227.3301 1948.3223 -1229.4688 cfu1952.9521 -1215.085 m1933.9395 -1215.0801 L1933.9395 -1326.769 L1931.8135 -1327.5215 1930.2881 -1329.5439 1930.2881 -1331.9277 C1930.2881 -1364.791 L1930.2881 -1367.8159 1932.7402 -1370.2681 1935.7646 -1370.2681 C1968.627 -1370.2681 L1971.0107 -1370.2681 1973.0332 -1368.7427 1973.7861 -1366.6167 C2085.4707 -1366.6167 L2085.4707 -1347.603 L1952.9521 -1215.085 Lf0 D2081.8193 -1362.9653 m1973.7861 -1362.9653 L1973.0332 -1360.8394 1971.0107 -1359.314 1968.627 -1359.314 C1948.8486 -1359.314 1941.2422 -1359.314 V1941.2422 -1351.707 1941.2422 -1331.9277 Y1941.2422 -1329.5439 1939.7168 -1327.5215 1937.5908 -1326.769 C1937.5908 -1218.7324 L1940.3262 -1218.7329 1950.2236 -1218.7354 1951.4395 -1218.7354 C1952.4951 -1219.792 2080.7627 -1348.0591 2081.8193 -1349.1157 C2081.8193 -1362.9653 LfU*U*u1 D0 0 0 0.8 k538.739 -1348.1831 m568.7021 -1198.3618 L478.811 -1348.1831 L538.739 -1348.1831 Lf568.7021 -1198.3618 m598.6672 -1348.1831 L658.5952 -1348.1831 L568.7021 -1198.3618 Lf538.739 -1373.2437 m598.6672 -1373.2437 L568.7021 -1223.4224 L538.739 -1373.2437 Lf*U*u1382.0823 -910.2534 m1382.0842 -867.1206 L1351.6692 -885.3706 L1324.4075 -901.728 L1359.0168 -844.0503 L1323.5442 -844.0503 L1315.884 -844.0503 L1319.1692 -827.6206 L1294.6721 -827.6206 L1255.1282 -827.6206 L1258.4143 -844.0503 L1215.2805 -844.0503 L1249.8899 -901.728 L1192.2141 -867.1206 L1192.2141 -902.5894 L1192.2141 -910.2534 L1175.7825 -906.9663 L1175.7825 -931.4614 L1175.7825 -971.0063 L1192.2151 -967.7173 L1192.2141 -1010.8501 L1249.8899 -976.2446 L1234.4309 -1002.0063 L1215.2805 -1033.9204 L1258.4143 -1033.9204 L1255.1282 -1050.3521 L1319.1692 -1050.3521 L1315.884 -1033.9204 L1359.0168 -1033.9204 L1324.4075 -976.2446 L1382.0842 -1010.8501 L1382.0842 -967.7173 L1398.5149 -971.0063 L1398.5149 -906.9663 L1382.0823 -910.2534 Lf0 D1317.5793 -969.4224 m1287.1487 -981.1821 L1256.719 -969.4224 L1244.9514 -938.9849 L1256.719 -908.5483 L1287.1487 -896.7886 L1317.5793 -908.5483 L1329.3459 -938.9849 L1317.5793 -969.4224 Lf*U*uu1 D2399.7852 -969.6772 m2372.6826 -980.1533 2372.4897 -980.228 V2372.2969 -980.1533 2343.7612 -969.1235 Y2321.458 -1006.2949 L2335.0293 -1030.2705 L2350.4917 -1030.2705 2350.6309 -1030.2705 V2352.5298 -1032.5859 2364.1016 -1046.7002 Y2380.8779 -1046.7002 L2392.4497 -1032.5859 2394.3486 -1030.2705 V2394.4863 -1030.2705 2409.9502 -1030.2705 Y2423.5225 -1006.2949 L2401.2183 -969.1235 L2399.7852 -969.6772 Lf0 D2372.4897 -985.5322 m2372.7275 -986.7212 2372.7837 -987.002 2372.9766 -987.9648 C2372.0029 -987.9648 L2372.1958 -987.002 2372.252 -986.7212 2372.4897 -985.5322 Cf2407.8213 -1026.6191 m2395.5625 -1026.6191 L2395.3955 -1026.4819 2393.8047 -1025.1743 Y2380.1611 -1041.8149 2379.1494 -1043.0488 V2365.8301 -1043.0488 L2364.8184 -1041.8149 2351.1738 -1025.1738 Y2349.5835 -1026.4829 2349.4175 -1026.6191 V2337.1582 -1026.6191 L2336.2373 -1024.9927 2326.6045 -1007.9746 2325.6846 -1006.3486 C2325.8501 -1006.0718 2343.8521 -976.0688 2345.311 -973.6372 C2347.7349 -974.5737 2366.8672 -981.9692 2369.291 -982.9063 C2368.8936 -984.895 2367.5498 -991.6162 Y2377.4297 -991.6162 L2376.0859 -984.895 2375.6885 -982.9063 V2378.1123 -981.9692 2397.2451 -974.5737 2399.6685 -973.6372 C2401.0928 -976.0112 2418.2979 -1004.6846 2419.2959 -1006.3486 C2418.3755 -1007.9746 2408.7422 -1024.9927 2407.8213 -1026.6191 CfUu1 D2331.2466 -938.9858 m2331.3208 -938.7939 2342.3535 -910.2607 Y2305.1772 -887.9556 L2304.251 -888.48 L2281.2065 -901.5259 L2281.2065 -916.9922 2281.2065 -917.1289 V2278.8926 -919.0259 2264.7749 -930.5981 Y2264.7749 -947.3735 L2278.8926 -958.9468 2281.2065 -960.8438 V2281.2065 -960.9805 2281.2065 -976.4468 Y2305.1768 -990.0171 L2342.3535 -967.7139 L2331.3208 -939.1777 2331.2466 -938.9858 Vf0 D2305.124 -985.7905 m2303.498 -984.8706 2286.4844 -975.2388 2284.8579 -974.3179 C2284.8579 -962.0566 L2284.9951 -961.8892 2286.2998 -960.2979 Y2269.6606 -946.6567 2268.4263 -945.645 V2268.4263 -932.3267 L2269.6606 -931.3149 2286.2998 -917.6748 Y2284.9951 -916.0835 2284.8579 -915.916 V2284.8579 -903.6548 L2286.4844 -902.7339 2303.4976 -893.1025 2305.1235 -892.1821 C2306.7876 -893.1802 2335.4653 -910.3862 2337.8398 -911.8105 C2336.9023 -914.2344 2329.5049 -933.3662 2328.5679 -935.7896 C2326.5796 -935.3921 2319.8608 -934.0503 Y2319.8608 -943.9263 L2326.5791 -942.5811 2328.5684 -942.1831 V2329.5054 -944.6069 2336.9023 -963.7402 2337.8398 -966.1641 C2335.4653 -967.5884 2306.7876 -984.7925 2305.124 -985.7905 Cf2325.9336 -938.9868 m2324.749 -939.2236 2324.4712 -939.2793 2323.5122 -939.4712 C2323.5122 -938.5034 L2324.4707 -938.6948 2324.749 -938.75 2325.9336 -938.9868 CfUu1 D2372.4897 -897.7446 m2372.6826 -897.8193 2401.2183 -908.8491 Y2423.5225 -871.6777 L2409.9502 -847.7041 L2394.4883 -847.7041 2394.3496 -847.7041 V2392.4536 -845.3911 2380.8779 -831.2725 Y2364.1016 -831.2725 L2352.5259 -845.3911 2350.6294 -847.7041 V2350.4897 -847.7041 2335.0293 -847.7041 Y2321.458 -871.6777 L2343.7612 -908.8491 L2372.2969 -897.8193 2372.4897 -897.7446 Vf0 D2372.4897 -892.4404 m2372.252 -891.2515 2372.1958 -890.9707 2372.0029 -890.0078 C2372.9766 -890.0078 L2372.7837 -890.9707 2372.7275 -891.2515 2372.4897 -892.4404 Cf2337.1582 -851.3555 m2349.4189 -851.3555 L2349.585 -851.4917 2351.1758 -852.7969 Y2364.8184 -836.1577 2365.8301 -834.9238 V2379.1494 -834.9238 L2380.1611 -836.1577 2393.8032 -852.7964 Y2395.394 -851.4922 2395.5605 -851.3555 V2407.8213 -851.3555 L2408.7422 -852.9819 2418.3755 -869.998 2419.2959 -871.624 C2418.2979 -873.2881 2401.0928 -901.9614 2399.6685 -904.3354 C2397.2451 -903.3989 2378.1123 -896.0034 2375.6885 -895.0664 C2376.0859 -893.0776 2377.4297 -886.3564 Y2367.5498 -886.3564 L2368.8936 -893.0776 2369.291 -895.0664 V2366.8672 -896.0034 2347.7349 -903.3989 2345.311 -904.3354 C2343.8867 -901.9614 2326.6826 -873.2881 2325.6846 -871.624 C2326.605 -869.998 2336.2373 -852.9819 2337.1582 -851.3555 CfUu1 D2463.7739 -917.1294 m2463.7739 -916.9927 2463.7739 -901.5259 Y2439.8027 -887.9561 L2438.8901 -888.5034 L2402.626 -910.2607 L2413.6572 -938.7939 2413.7314 -938.9858 V2413.6572 -939.1777 2402.626 -967.7139 Y2439.8027 -990.0171 L2463.7739 -976.4468 L2463.7739 -960.98 2463.7739 -960.8433 V2466.0898 -958.9448 2480.2046 -947.3735 Y2480.2046 -930.5981 L2466.0898 -919.0278 2463.7739 -917.1294 Vf0 D2476.5532 -945.645 m2475.3193 -946.6567 2458.6787 -960.2988 Y2459.9854 -961.8901 2460.1226 -962.0571 V2460.1226 -974.3179 L2458.4961 -975.2388 2441.4814 -984.8706 2439.8555 -985.7905 C2438.1919 -984.7925 2409.5137 -967.5884 2407.1396 -966.1641 C2408.0767 -963.7402 2415.4736 -944.6064 2416.4106 -942.1826 C2418.3994 -942.5806 2425.1187 -943.9233 Y2425.1187 -934.0508 L2418.3994 -935.3921 2416.4106 -935.7896 V2415.4736 -933.3662 2408.0771 -914.2344 2407.1396 -911.8105 C2409.5625 -910.3569 2437.8145 -893.4058 Y2438.9839 -892.7046 2439.8555 -892.1816 V2441.4814 -893.1021 2458.4961 -902.7339 2460.1226 -903.6548 C2460.1226 -915.9155 L2459.9854 -916.0825 2458.6787 -917.6738 Y2475.3193 -931.3149 2476.5532 -932.3267 V2476.5532 -945.645 Lf2419.0474 -938.9863 m2420.2314 -938.75 2420.5093 -938.6943 2421.4673 -938.5029 C2421.4673 -939.4702 L2420.5088 -939.2783 2420.2314 -939.2231 2419.0474 -938.9863 CfU*U*u1 D3416.3564 -996.6528 m3445.1885 -852.49 L3358.6914 -996.6528 L3416.3564 -996.6528 Lf3531.6875 -996.6528 m3445.1885 -852.49 L3474.022 -996.6528 L3531.6875 -996.6528 Lf3589.3506 -967.8188 m3445.1885 -852.49 L3531.6875 -967.8188 L3589.3506 -967.8188 Lf3358.6914 -967.8188 m3445.1885 -852.49 L3301.0264 -967.8188 L3358.6914 -967.8188 Lf3416.3564 -1025.4829 m3474.022 -1025.4829 L3445.1885 -881.3235 L3416.3564 -1025.4829 Lf*U*u2697.1084 -1377.1465 m2697.1084 -1208.2012 L2612.6323 -1292.6753 L2697.1084 -1377.1465 Lf2700.1636 -1332.3804 m2752.0874 -1332.3804 L2752.0874 -1252.9678 L2700.1636 -1252.9678 L2700.1636 -1332.3804 Lf2755.1411 -1252.9678 m2755.1411 -1332.3804 L2834.5552 -1332.3804 L2834.5552 -1252.9678 L2755.1411 -1252.9678 Lf*U0 D1711.6851 -1233.5435 m1652.5562 -1263.1084 L1652.5562 -1203.9814 L1563.8643 -1292.6738 L1652.5562 -1381.3662 L1652.5562 -1322.2393 L1711.6851 -1351.8008 L1741.25 -1322.2393 L1741.25 -1263.1084 L1711.6851 -1233.5435 Lf*u1 D3445.1885 -1174.2661 m3326.7808 -1292.6738 L3445.1885 -1253.2026 L3563.5962 -1292.6738 L3445.1885 -1174.2661 Lf3445.1885 -1253.2026 m3405.7197 -1292.6738 L3366.2485 -1371.6152 L3405.7197 -1411.0815 L3484.6592 -1411.0815 L3524.1274 -1371.6152 L3484.6592 -1292.6738 L3445.1885 -1253.2026 Lf*U*u0.2 g3059.2715 -1252.5098 m3059.2715 -1250.4932 3057.6367 -1248.8584 3055.6201 -1248.8584 c3026.4277 -1248.8584 3002.6772 -1272.6094 3002.6772 -1301.8027 c3002.6772 -1303.8193 3004.312 -1305.4541 3006.3286 -1305.4541 c3008.3452 -1305.4541 3009.98 -1303.8193 3009.98 -1301.8027 c3009.98 -1276.6357 3030.4546 -1256.1611 3055.6201 -1256.1611 c3057.6367 -1256.1611 3059.2715 -1254.5264 3059.2715 -1252.5098 cfu3121.3447 -1226.9497 m3117.4014 -1226.9497 3114.0518 -1229.4551 3112.7759 -1232.9575 C3104.0811 -1234.0361 3095.8809 -1236.7295 3088.4824 -1240.7261 C3081.084 -1236.7295 3072.8843 -1234.0361 3064.1899 -1232.9575 C3062.9141 -1229.4551 3059.5645 -1226.9497 3055.6201 -1226.9497 c3014.3481 -1226.9497 2980.7695 -1260.5288 2980.7695 -1301.8027 C2980.7695 -1318.2344 L2980.7695 -1321.9766 2983.0239 -1325.189 2986.2466 -1326.5981 C2986.2466 -1351.0957 L2986.2466 -1352.5723 2987.1362 -1353.9038 2988.5005 -1354.4692 c2989.8652 -1355.0342 2991.4355 -1354.7217 2992.4795 -1353.6777 C3008.9102 -1337.248 L3010.3364 -1335.8223 3010.3364 -1333.5103 3008.9106 -1332.084 c3007.4844 -1330.6582 3005.1729 -1330.6582 3003.7471 -1332.084 C2998.3511 -1337.4795 2993.5493 -1342.2813 V2993.5493 -1326.5981 L2996.772 -1325.189 2999.0264 -1321.9766 2999.0264 -1318.2344 C2999.0264 -1301.8027 L2999.0264 -1270.5957 3024.415 -1245.2065 3055.6201 -1245.2065 c3059.1421 -1245.2065 3062.1924 -1243.209 3063.7148 -1240.2891 C3069.8726 -1241.1113 3075.75 -1242.8311 3081.2129 -1245.3164 C3063.5479 -1257.9048 3051.9688 -1278.5073 3051.9688 -1301.8027 C3051.9688 -1303.3154 L3088.4824 -1339.8301 L3124.9961 -1303.3154 L3124.9961 -1301.8027 L3124.9961 -1278.5073 3113.417 -1257.9048 3095.752 -1245.3164 C3101.2158 -1242.8311 3107.0928 -1241.1113 3113.251 -1240.2886 C3114.7734 -1243.209 3117.8232 -1245.2065 3121.3447 -1245.2065 c3152.5518 -1245.2065 3177.9414 -1270.5957 3177.9414 -1301.8027 C3177.9414 -1318.2344 L3177.9414 -1321.9766 3180.1953 -1325.189 3183.418 -1326.5981 C3183.418 -1342.2813 L3178.6162 -1337.4795 3173.2197 -1332.084 Y3171.7939 -1330.6582 3169.4814 -1330.6582 3168.0557 -1332.084 c3166.6299 -1333.5103 3166.6299 -1335.8223 3168.0557 -1337.248 C3184.4873 -1353.6777 L3185.5322 -1354.7217 3187.1025 -1355.0342 3188.4668 -1354.4688 c3189.8311 -1353.9038 3190.7207 -1352.5723 3190.7207 -1351.0957 C3190.7207 -1326.5981 L3193.9438 -1325.1895 3196.1982 -1321.9766 3196.1982 -1318.2344 C3196.1982 -1301.8027 L3196.1982 -1260.5288 3162.6191 -1226.9497 3121.3447 -1226.9497 cf0 D3117.6211 -1300.3633 m3117.3984 -1300.5859 3116.8911 -1301.0928 3116.1816 -1301.8027 C3060.7842 -1301.8027 L3059.3447 -1300.3633 L3059.8418 -1278.814 3071.3574 -1259.9844 3088.4824 -1249.2383 C3105.6084 -1259.9844 3117.123 -1278.814 3117.6211 -1300.3633 CfU1 D3099.75 -1329.502 m3093.3389 -1335.9126 3088.4824 -1340.7686 V3083.626 -1335.9126 3077.2158 -1329.502 Y3074.3633 -1326.6504 3069.7402 -1326.6504 3066.8877 -1329.5024 c3064.0361 -1332.3545 3064.0361 -1336.978 3066.8887 -1339.8301 C3083.3193 -1356.2598 L3086.1709 -1359.1113 3090.7949 -1359.1113 3093.6465 -1356.2598 C3110.0771 -1339.8301 L3112.9287 -1336.978 3112.9287 -1332.3545 3110.0771 -1329.5024 c3107.2256 -1326.6504 3102.6016 -1326.6504 3099.75 -1329.502 Cf3170.6377 -1305.4541 m3172.6543 -1305.4541 3174.2891 -1303.8193 3174.2891 -1301.8027 c3174.2891 -1272.6094 3150.5381 -1248.8584 3121.3447 -1248.8584 c3119.3281 -1248.8584 3117.6934 -1250.4932 3117.6934 -1252.5098 c3117.6934 -1254.5264 3119.3281 -1256.1611 3121.3447 -1256.1611 c3146.5117 -1256.1611 3166.9863 -1276.6357 3166.9863 -1301.8027 c3166.9863 -1303.8193 3168.6211 -1305.4541 3170.6377 -1305.4541 cf*U*u0 0 0 0.8 k270.7373 -1194.0869 m161.1963 -1194.0869 L136.9971 -1194.0869 117.3809 -1213.7061 117.3809 -1237.9033 C117.3809 -1347.4443 L117.3809 -1371.6416 136.9971 -1391.2607 161.1963 -1391.2607 C270.7373 -1391.2607 L294.9365 -1391.2607 314.5537 -1371.6416 314.5537 -1347.4443 C314.5537 -1237.9033 L314.5537 -1213.7061 294.9365 -1194.0869 270.7373 -1194.0869 Cf0 D248.8291 -1300.8896 m240.6133 -1300.8896 L224.1826 -1292.6748 L240.6133 -1317.3213 L232.3975 -1325.5361 L199.5361 -1325.5361 L191.3203 -1317.3213 L207.751 -1292.6748 L191.3203 -1300.8896 L183.1045 -1300.8896 L183.1045 -1292.6748 L215.9668 -1259.8115 L248.8291 -1292.6748 L248.8291 -1300.8896 Lf*U629.5474 -1564.166 m599.126 -1594.5884 L599.126 -1685.8564 L538.2808 -1685.8564 L538.2808 -1655.4341 L599.126 -1655.4341 L599.1226 -1625.0107 L599.126 -1625.0107 L599.1226 -1594.5884 L538.2808 -1594.5884 L507.8584 -1564.166 L477.4351 -1564.166 L477.4351 -1625.0107 L507.8584 -1655.4341 L507.8584 -1685.8564 L568.7031 -1746.7012 L629.5474 -1685.8564 L629.5474 -1655.4341 L659.9707 -1625.0107 L659.9707 -1564.166 L629.5474 -1564.166 Lf*u1 D561.1377 -1955.623 m561.1377 -1972.5244 L584.9966 -1972.5244 604.4082 -1991.9355 604.4082 -2015.7949 C621.3086 -2015.7949 L621.3086 -1982.6162 594.3164 -1955.623 561.1377 -1955.623 Cfu666.0972 -1909.3154 m639.4775 -1935.9355 L639.4775 -1942.918 L619.6851 -1921.2461 591.2129 -1907.626 559.6187 -1907.626 C559.6187 -1900.8652 L496.2451 -1900.8652 444.689 -1952.4209 444.689 -2015.7949 c444.689 -2079.1689 496.2451 -2130.7256 559.6187 -2130.7256 c622.9917 -2130.7256 674.5483 -2079.1689 674.5483 -2015.7949 C692.7168 -2015.7949 L692.7168 -1935.9355 L666.0972 -1909.3154 Lf0 D559.6187 -2113.8232 m505.5674 -2113.8232 461.5903 -2069.8467 461.5903 -2015.7949 c461.5903 -1961.7432 505.5674 -1917.7666 559.6187 -1917.7666 C559.6187 -1911.0059 L591.5894 -1911.0059 620.2427 -1925.4111 639.4775 -1948.0576 C639.4775 -2015.7949 L657.647 -2015.7949 L657.647 -2069.8467 613.6704 -2113.8232 559.6187 -2113.8232 cfU*U*u1 D256.5305 -1993.0791 m256.5305 -2013.3613 236.249 -2013.3613 V215.9673 -2063.9961 L195.6858 -2013.3613 L175.4041 -2013.3613 175.4041 -1993.0791 Y155.1226 -2013.3613 L155.1226 -2135.0508 L276.8123 -2135.0508 L276.8123 -2013.3613 L256.5305 -1993.0791 Lf256.5305 -1942.375 m236.249 -1942.375 L236.249 -1896.54 L195.6858 -1896.54 L195.6858 -1942.375 L175.4041 -1942.375 L215.9673 -2043.7832 L256.5305 -1942.375 Lf*U*u229.2769 -1642.124 m229.2769 -1615.5039 L215.9668 -1602.1938 L202.657 -1615.5039 L202.657 -1642.124 L215.9668 -1628.814 L229.2769 -1642.124 Lf202.657 -1721.9834 m202.657 -1748.6025 L215.9668 -1761.9121 L229.2769 -1748.6025 L229.2769 -1721.9834 L215.9668 -1735.293 L202.657 -1721.9834 Lf229.2769 -1588.8848 m229.2769 -1562.2651 L215.9668 -1548.9551 L202.657 -1562.2651 L202.657 -1588.8848 L215.9668 -1575.5752 L229.2769 -1588.8848 Lf136.1082 -1655.4341 m149.418 -1642.124 L122.7983 -1642.124 L109.4883 -1655.4341 L122.7983 -1668.7441 L149.418 -1668.7441 L136.1082 -1655.4341 Lf159.4993 -1693.0791 m140.6768 -1711.9014 L140.6768 -1730.7246 L159.4993 -1730.7246 L178.3215 -1711.9014 L159.4993 -1711.9014 L159.4993 -1693.0791 Lf272.4346 -1617.7886 m291.2612 -1598.9624 L291.2612 -1580.1401 L272.4346 -1580.1401 L253.6123 -1598.9624 L272.4346 -1598.9624 L272.4346 -1617.7886 Lf309.1362 -1642.124 m282.5166 -1642.124 L295.8267 -1655.4341 L282.5166 -1668.7441 L309.1362 -1668.7441 L322.4463 -1655.4341 L309.1362 -1642.124 Lf272.4346 -1711.9014 m253.6123 -1711.9014 L272.4346 -1730.7246 L291.2576 -1730.7246 L291.2576 -1711.9014 L272.4346 -1693.0791 L272.4346 -1711.9014 Lf202.657 -1668.7441 m202.657 -1695.3633 L215.9668 -1708.6733 L229.2769 -1695.3633 L229.2769 -1668.7441 L215.9668 -1682.0537 L202.657 -1668.7441 Lf202.657 -1655.4341 m215.9668 -1642.124 L202.657 -1642.124 L189.3477 -1642.124 L176.0378 -1655.4341 L189.3477 -1668.7441 L202.657 -1668.7441 L215.9668 -1668.7441 L202.657 -1655.4341 Lf242.5869 -1642.124 m229.2769 -1642.124 L215.9668 -1642.124 L229.2769 -1655.4341 L215.9668 -1668.7441 L229.2769 -1668.7441 L242.5869 -1668.7441 L255.8965 -1655.4341 L242.5869 -1642.124 Lf159.4993 -1598.9663 m178.3215 -1598.9663 L159.4993 -1580.1401 L140.6768 -1580.1401 L140.6768 -1598.9663 L159.4993 -1617.7886 L159.4993 -1598.9663 Lf*U*u956.8799 -1594.5884 m956.8799 -1625.0107 L896.0342 -1625.0107 L896.0342 -1594.5884 L865.6118 -1564.166 L865.6118 -1685.8564 L926.4565 -1746.7012 L987.3022 -1685.8564 L987.3022 -1564.166 L956.8799 -1594.5884 Lf0 D926.4565 -1685.8564 m896.0342 -1685.8564 L896.0342 -1655.4341 L926.4565 -1655.4341 L926.4565 -1685.8564 Lf*U*u1 D1198.2312 -1715.6641 m1181.0232 -1721.4053 L1215.4397 -1755.8223 L1232.6516 -1750.0879 L1238.385 -1732.877 L1203.9685 -1698.4561 L1198.2312 -1715.6641 Lf1197.9084 -1675.7158 m1197.9084 -1627.0381 L1181.6868 -1635.1514 L1165.4587 -1627.0381 L1165.4587 -1675.7158 L1181.6833 -1683.8291 L1197.9084 -1675.7158 Lf1221.177 -1549.3076 m1186.7571 -1583.7236 L1192.4939 -1600.9365 L1209.7053 -1606.6699 L1244.1257 -1572.2529 L1226.9143 -1566.5166 L1221.177 -1549.3076 Lf1364.5916 -1704.1963 m1330.1711 -1738.6133 L1347.3831 -1744.3477 L1353.1169 -1761.5586 L1387.5374 -1727.1387 L1381.803 -1709.9268 L1364.5916 -1704.1963 Lf1258.7527 -1744.6738 m1266.8674 -1760.8955 L1258.7527 -1777.124 L1307.4299 -1777.124 L1315.5442 -1760.8955 L1307.4299 -1744.6738 L1258.7527 -1744.6738 Lf1408.8386 -1635.1514 m1392.6101 -1627.0381 L1376.3889 -1635.1514 L1376.3889 -1683.8291 L1392.6101 -1675.7158 L1408.8386 -1683.8291 L1408.8386 -1635.1514 Lf1266.8674 -1533.7432 m1258.7527 -1549.9717 L1266.8674 -1566.1924 L1315.5442 -1566.1924 L1307.4299 -1549.9717 L1315.5442 -1533.7432 L1266.8674 -1533.7432 Lf1376.0627 -1595.1982 m1393.2737 -1589.4619 L1358.8547 -1555.042 L1341.6428 -1560.7793 L1335.9124 -1577.9902 L1370.3289 -1612.4072 L1376.0627 -1595.1982 Lf*U*u3468.7461 -1643.6543 m3468.7461 -1549.4243 L3445.1885 -1525.8682 L3421.6309 -1549.4243 L3421.6309 -1643.6543 L3445.1885 -1620.0972 L3468.7461 -1643.6543 Lf3445.1885 -1690.7686 m3421.6309 -1714.3267 L3445.1885 -1737.8838 L3468.7461 -1714.3267 L3445.1885 -1690.7686 Lf3445.1885 -1641.8037 m3397.1484 -1689.8438 L3399 -1691.6943 L3443.4092 -1647.2847 3445.1885 -1645.5054 V3446.9678 -1647.2847 3491.3789 -1691.6943 Y3493.2285 -1689.8438 L3445.1885 -1641.8037 Lf3421.6309 -1761.4414 m3421.6309 -1774.4521 3432.1777 -1784.999 3445.1885 -1784.999 c3458.2002 -1784.999 3468.7461 -1774.4521 3468.7461 -1761.4414 c3468.7461 -1748.4307 3458.2002 -1737.8838 3445.1885 -1737.8838 c3432.1777 -1737.8838 3421.6309 -1748.4307 3421.6309 -1761.4414 cf*U*u1895.9429 -1019.5059 m1910.2202 -1044.2344 1941.8403 -1052.708 1966.5688 -1038.4316 C2007.8794 -954.8809 L1914.8677 -948.8838 L1890.1392 -963.1611 1881.6665 -994.7783 1895.9429 -1019.5059 cf2007.8794 -825.6299 m1979.3257 -825.6299 1956.1792 -848.7754 1956.1792 -877.3301 C2007.8794 -954.8809 L2059.5796 -877.3301 L2059.5796 -848.7754 2036.4341 -825.6299 2007.8794 -825.6299 cf2100.8901 -948.8838 m2007.8794 -954.8809 L2049.1899 -1038.4316 L2073.9185 -1052.708 2105.5386 -1044.2344 2119.8149 -1019.5059 c2134.0933 -994.7783 2125.6196 -963.1611 2100.8901 -948.8838 Cf*U*u2620.1929 -1758.834 m2723.5942 -1724.3682 L2826.9946 -1758.834 L2826.9946 -1689.9004 L2723.5942 -1655.4336 L2620.1929 -1689.9004 L2620.1929 -1758.834 Lf2826.9946 -1552.0332 m2736.519 -1582.1914 L2736.519 -1564.958 L2723.5942 -1552.0332 L2710.6694 -1564.958 L2710.6694 -1582.1914 L2620.1929 -1552.0332 L2620.1929 -1620.9658 L2723.5942 -1655.4336 L2826.9946 -1620.9658 L2826.9946 -1552.0332 Lf*U0 D1652.5581 -1533.7432 m1652.5581 -1568.5137 1548.2529 -1638.0498 Y1548.2529 -1672.8164 L1583.0195 -1707.5869 L1617.7886 -1672.8164 L1617.7886 -1742.3535 L1617.7886 -1777.124 1652.5581 -1777.124 Y1687.3257 -1777.124 1687.3257 -1742.3535 V1687.3257 -1672.8164 L1722.0952 -1707.5869 L1756.8618 -1672.8164 L1756.8618 -1638.0498 L1652.5581 -1568.5137 1652.5581 -1533.7432 vf2426.5747 -1655.4336 m2399.5327 -1695.9966 L2399.5327 -1668.9541 L2372.4897 -1533.7437 L2345.4478 -1668.9541 L2345.4478 -1695.9966 L2318.4048 -1655.4336 L2340.9419 -1734.3057 L2318.4048 -1723.0391 L2345.4478 -1750.0815 L2345.4478 -1765.0151 2357.5562 -1777.1235 2372.4897 -1777.1235 c2387.4243 -1777.1235 2399.5327 -1765.0151 2399.5327 -1750.0815 C2426.5747 -1723.0391 L2404.0386 -1734.3057 L2426.5747 -1655.4336 Lf2723.5938 -1655.4336 mF*u1 D2372.4893 -1901.1563 m2316.8867 -1901.1563 2275.043 -1981.1304 2275.043 -2032.9868 c2275.043 -2086.7183 2318.7588 -2130.4346 2372.4893 -2130.4346 c2426.2207 -2130.4346 2469.9365 -2086.7183 2469.9365 -2032.9868 c2469.9365 -1981.1304 2428.0928 -1901.1563 2372.4893 -1901.1563 cf0 D2433.334 -2080.3638 m2433.334 -2032.9868 L2372.4893 -1972.1426 L2311.6445 -2032.9868 L2311.6445 -2080.3638 L2301.4316 -2067.2749 2295.3242 -2050.8354 2295.3242 -2032.9868 c2295.3242 -1989.9541 2330.6387 -1921.438 2372.4893 -1921.438 c2414.3408 -1921.438 2449.6543 -1989.9541 2449.6543 -2032.9868 c2449.6543 -2050.8354 2443.5488 -2067.2749 2433.334 -2080.3638 Cf*U*u1 D0.2 g968.6572 -1966.562 m954.5908 -1952.4956 L940.5237 -1966.562 L940.5237 -1882.1616 L926.457 -1896.2285 L912.3904 -1882.1616 L912.3904 -1966.562 L898.3235 -1952.4956 L884.2568 -1966.562 L884.2568 -2036.895 L898.3235 -2022.8286 L926.457 -2050.9619 L954.5908 -2022.8286 L968.6572 -2036.895 L968.6572 -1966.562 Lf898.3235 -2050.9619 m898.3235 -2121.2954 L926.457 -2149.4292 L954.5908 -2121.2954 L954.5908 -2050.9619 L926.457 -2079.0952 L898.3235 -2050.9619 Lf982.7239 -2065.0288 m968.6572 -2050.9619 L968.6572 -2086.1284 L982.7239 -2100.1953 L996.7905 -2086.1284 L996.7905 -2050.9619 L982.7239 -2065.0288 Lf856.1235 -2050.9619 m856.1235 -2086.1284 L870.1902 -2100.1953 L884.2568 -2086.1284 L884.2568 -2050.9619 L870.1902 -2065.0288 L856.1235 -2050.9619 Lf*U*u1293.1218 -2023.5073 m1293.1218 -1909.1963 L1300.3523 -1916.4268 1309.8054 -1925.8799 Y1312.1389 -1928.2124 1315.9192 -1928.2124 1318.2527 -1925.8799 c1320.5857 -1923.5454 1320.5857 -1919.7661 1318.2527 -1917.4331 C1291.3752 -1890.5552 L1291.0979 -1890.2788 1290.7888 -1890.0278 1290.4592 -1889.8091 c1290.3191 -1889.7124 1290.1648 -1889.6489 1290.0159 -1889.5669 c1289.8235 -1889.4614 1289.6365 -1889.3452 1289.4324 -1889.2578 c1289.2371 -1889.1787 1289.0359 -1889.1323 1288.8347 -1889.0742 c1288.6624 -1889.0239 1288.4963 -1888.957 1288.3186 -1888.9194 c1287.5457 -1888.7681 1286.7522 -1888.7681 1285.9792 -1888.9194 c1285.801 -1888.957 1285.635 -1889.0239 1285.4626 -1889.0742 c1285.262 -1889.1323 1285.0603 -1889.1787 1284.865 -1889.2578 c1284.6609 -1889.3452 1284.4744 -1889.4614 1284.2815 -1889.5669 c1284.1331 -1889.6489 1283.9783 -1889.7124 1283.8386 -1889.8091 c1283.5085 -1890.0278 1283.1995 -1890.2788 1282.9226 -1890.5552 C1256.0457 -1917.4331 L1253.7122 -1919.7661 1253.7122 -1923.5454 1256.0457 -1925.8799 c1258.3787 -1928.2124 1262.1584 -1928.2124 1264.4919 -1925.8799 C1273.9446 -1916.4268 1281.1755 -1909.1963 V1281.1755 -2029.1772 L1281.1755 -2032.4756 1283.8499 -2035.1499 1287.1487 -2035.1499 c1311.4709 -2035.1499 1331.5671 -2053.4292 1334.5212 -2076.9634 C1233.3884 -2076.9634 L1230.0896 -2076.9634 1227.4148 -2079.6382 1227.4148 -2082.937 c1227.4148 -2115.8755 1254.2107 -2142.6714 1287.1487 -2142.6714 c1320.0872 -2142.6714 1346.8826 -2115.8755 1346.8826 -2082.937 c1346.8826 -2052.0151 1323.2659 -2026.5142 1293.1218 -2023.5073 Cf0 D1287.1487 -2130.7241 m1262.8269 -2130.7241 1242.7307 -2112.4458 1239.7756 -2088.9106 C1334.5212 -2088.9106 L1331.5671 -2112.4458 1311.4709 -2130.7241 1287.1487 -2130.7241 cf*U1747.3281 -1947.6973 m1711.665 -1912.0342 L1711.2979 -1911.667 1710.8872 -1911.334 1710.4502 -1911.0439 c1710.2642 -1910.916 1710.0591 -1910.8311 1709.8613 -1910.7227 c1709.6064 -1910.583 1709.3584 -1910.4282 1709.0879 -1910.3125 c1708.8281 -1910.208 1708.5615 -1910.1455 1708.2939 -1910.0684 c1708.0659 -1910.0024 1707.8457 -1909.9136 1707.6094 -1909.8633 c1706.584 -1909.6621 1705.5313 -1909.6621 1704.5059 -1909.8633 c1704.2695 -1909.9136 1704.0488 -1910.0024 1703.8203 -1910.0684 c1703.5537 -1910.1455 1703.2861 -1910.208 1703.0273 -1910.3125 c1702.7559 -1910.4282 1702.5088 -1910.583 1702.2529 -1910.7227 c1702.0557 -1910.8311 1701.8506 -1910.916 1701.665 -1911.0439 c1701.2275 -1911.334 1700.8174 -1911.667 1700.4497 -1912.0342 C1664.7871 -1947.6973 L1661.6904 -1950.793 1661.6904 -1955.8086 1664.7871 -1958.9048 c1667.8828 -1962.001 1672.8984 -1962.001 1675.9946 -1958.9048 C1688.5376 -1946.3618 1698.1318 -1936.7681 V1698.1318 -2057.019 L1689.6406 -2065.5098 1660.2202 -2094.9268 1652.5576 -2102.5933 C1644.8945 -2094.9268 1615.4746 -2065.5098 1606.9834 -2057.019 C1606.9834 -1936.7681 L1616.5771 -1946.3618 1629.1201 -1958.9048 Y1632.2163 -1962.001 1637.2319 -1962.001 1640.3281 -1958.9048 c1643.4238 -1955.8086 1643.4238 -1950.793 1640.3281 -1947.6973 C1604.665 -1912.0342 L1604.2979 -1911.667 1603.8872 -1911.334 1603.4502 -1911.0439 c1603.2642 -1910.916 1603.0591 -1910.8311 1602.8613 -1910.7227 c1602.6064 -1910.583 1602.3584 -1910.4282 1602.0879 -1910.3125 c1601.8281 -1910.208 1601.5615 -1910.1455 1601.2939 -1910.0684 c1601.0659 -1910.0024 1600.8457 -1909.9136 1600.6094 -1909.8633 c1599.584 -1909.6621 1598.5313 -1909.6621 1597.5059 -1909.8633 c1597.2695 -1909.9136 1597.0488 -1910.0024 1596.8203 -1910.0684 c1596.5537 -1910.1455 1596.2861 -1910.208 1596.0273 -1910.3125 c1595.7559 -1910.4282 1595.5088 -1910.583 1595.2529 -1910.7227 c1595.0557 -1910.8311 1594.8506 -1910.916 1594.665 -1911.0439 c1594.2275 -1911.334 1593.8174 -1911.667 1593.4497 -1912.0342 C1557.7871 -1947.6973 L1554.6904 -1950.793 1554.6904 -1955.8086 1557.7871 -1958.9048 c1560.8828 -1962.001 1565.8984 -1962.001 1568.9946 -1958.9048 C1581.5376 -1946.3618 1591.1318 -1936.7681 V1591.1318 -2060.3008 L1591.1318 -2060.8193 1591.1855 -2061.3418 1591.2861 -2061.8525 c1591.333 -2062.0889 1591.4258 -2062.3096 1591.4912 -2062.5381 c1591.5688 -2062.8047 1591.6309 -2063.0723 1591.7354 -2063.3311 c1591.8516 -2063.6021 1592.0059 -2063.8496 1592.1455 -2064.1055 c1592.2539 -2064.3027 1592.3389 -2064.5078 1592.4629 -2064.6934 c1592.7568 -2065.1309 1593.0898 -2065.541 1593.457 -2065.9087 C1646.9536 -2119.4048 L1650.0498 -2122.501 1655.0654 -2122.501 1658.1611 -2119.4048 C1711.6572 -2065.9087 L1712.0254 -2065.541 1712.3579 -2065.1309 1712.6523 -2064.6934 c1712.7759 -2064.5078 1712.8613 -2064.3027 1712.9697 -2064.1055 c1713.1084 -2063.8496 1713.2637 -2063.6021 1713.3799 -2063.3311 c1713.4844 -2063.0723 1713.5459 -2062.8047 1713.623 -2062.5381 c1713.6895 -2062.3096 1713.7822 -2062.0889 1713.8286 -2061.8525 c1713.9292 -2061.3418 1713.9834 -2060.8193 1713.9834 -2060.3008 C1713.9834 -1936.7681 L1723.5771 -1946.3618 1736.1201 -1958.9048 Y1739.2163 -1962.001 1744.2319 -1962.001 1747.3281 -1958.9048 c1750.4238 -1955.8086 1750.4238 -1950.793 1747.3281 -1947.6973 Cf*u1 D1905.2129 -1951.6289 m2007.8794 -2131.2954 L2110.5464 -1951.6289 L2007.8794 -2002.9619 L1905.2129 -1951.6289 Lf2007.8794 -1977.2954 m1905.2129 -1925.9619 L2007.8794 -2002.9619 L2110.5464 -1925.9619 L2007.8794 -1977.2954 Lf2007.8794 -1951.6289 m1956.5464 -1925.9619 L2007.8794 -1977.2954 L2059.2129 -1925.9619 L2007.8794 -1951.6289 Lf2007.8794 -1925.9619 m1982.2129 -1900.2954 L2007.8794 -1951.6289 L2033.5464 -1900.2954 L2007.8794 -1925.9619 Lf*U0 D3122.9146 -1603.7896 m3208.9839 -1638.2178 L3122.9146 -1586.5771 L3122.9146 -1534.9336 L3088.4839 -1569.3613 L3054.0552 -1534.9336 L3054.0552 -1586.5771 L2967.9839 -1638.2178 L3054.0552 -1603.7896 L3019.6274 -1689.8613 L3054.0552 -1638.2178 L3036.8423 -1707.0771 L3059.7944 -1661.1719 L3088.4839 -1775.9336 L3117.1763 -1661.1719 L3140.1274 -1707.0771 L3122.9146 -1638.2178 L3157.3423 -1689.8613 L3122.9146 -1603.7896 Lf0 0 0 0.8 k2847.3599 -1998.1143 m2811.9985 -2015.7949 L2794.3198 -1998.1143 L2776.6382 -2015.7949 L2758.9575 -1998.1143 L2758.9575 -1927.3906 L2776.6382 -1927.3906 L2723.5952 -1909.71 L2670.5527 -1927.3906 L2688.2339 -1927.3906 L2688.2339 -1998.1143 L2670.5527 -2015.7949 L2652.8726 -1998.1143 L2652.8726 -1998.1182 L2652.8682 -1998.1143 L2635.189 -2015.7949 L2599.8276 -1998.1143 L2635.189 -2086.5186 L2599.8276 -2068.8379 L2635.189 -2121.8804 L2811.9985 -2121.8804 L2847.3599 -2068.8379 L2811.9985 -2086.5186 L2847.3599 -1998.1143 Lf*u1 D0.2 g3117.3799 -1929.1099 m3117.3799 -1900.2148 L3059.5859 -1900.2148 L3059.5859 -1929.1099 L3030.6924 -1958.0054 L3059.5859 -2044.6904 L3088.4814 -1958.0054 L3088.4854 -1958.0054 L3117.3799 -2044.6904 L3146.2754 -1958.0054 L3117.3799 -1929.1099 Lf3059.5859 -2044.6904 m3059.5859 -2102.481 L3088.4814 -2131.376 L3117.377 -2102.481 L3117.3799 -2044.6904 L3088.4814 -2015.7954 L3059.5859 -2044.6904 Lf*U*u3328.1851 -1892.2915 m3328.1851 -2139.2993 L3562.1924 -2139.2993 L3562.1924 -1892.2915 L3328.1851 -1892.2915 Lf0 D3536.1924 -2033.7588 m3523.1914 -2059.7593 L3523.1914 -2100.2983 L3510.1914 -2100.2983 L3510.1914 -2074.2974 L3445.1885 -2035.2959 L3380.1865 -2074.2974 L3380.1865 -2100.2983 L3367.186 -2100.2983 L3367.186 -2059.7593 L3354.1865 -2033.7588 L3354.1865 -1996.2944 L3380.1865 -2048.2964 L3445.1885 -1915.8843 L3510.1914 -2048.2964 L3536.1924 -1996.2944 L3536.1924 -2033.7588 Lf*U*u1 D0 0 0 0.8 k2821.2495 -905.8848 m2813.5532 -907.4238 L2813.5532 -880.1816 L2802.4937 -873.9199 L2745.3862 -908.1875 L2779.6489 -851.0781 L2773.3882 -840.0176 L2746.147 -840.0176 L2747.686 -832.3223 L2740.5259 -823.5859 L2707.6636 -823.5859 L2700.5034 -832.3223 L2702.0425 -840.0176 L2674.8013 -840.0176 L2668.5396 -851.0781 L2702.8052 -908.1875 L2645.6958 -873.9199 L2634.6362 -880.1816 L2634.6362 -907.4238 L2626.9399 -905.8848 L2618.2056 -913.0449 L2618.2056 -945.9053 L2626.9399 -953.0654 L2634.6362 -951.5244 L2634.6362 -978.7666 L2645.6958 -985.0283 L2702.8052 -950.7627 L2668.5396 -1007.8721 L2674.8013 -1018.9326 L2702.0425 -1018.9326 L2700.5034 -1026.6279 L2707.6636 -1035.3643 L2740.5259 -1035.3643 L2747.686 -1026.6279 L2746.147 -1018.9326 L2773.3882 -1018.9326 L2779.6489 -1007.8721 L2745.3862 -950.7627 L2802.4937 -985.0283 L2813.5532 -978.7666 L2813.5532 -951.5244 L2821.2495 -953.0654 L2829.9839 -945.9053 L2829.9839 -913.0449 L2821.2495 -905.8848 Lf0 D2798.9478 -893.0801 m2798.9478 -899.7441 2798.9478 -902.8926 2798.9478 -907.0566 C2794.3101 -907.9844 2781.4751 -910.5527 2764.0024 -914.0469 C2781.2241 -903.7129 2790.8052 -897.9648 2798.9478 -893.0801 Cf2760.4907 -854.623 m2755.605 -862.7637 2749.856 -872.3438 2739.5239 -889.5664 C2743.0181 -872.0957 2745.5854 -859.2578 2746.5132 -854.623 C2750.6772 -854.623 2753.8247 -854.623 2760.4907 -854.623 Cf2731.6187 -838.1914 m2730.189 -845.3418 2727.7944 -857.3105 2724.0942 -875.8066 C2720.395 -857.3105 2718.0005 -845.3418 2716.5708 -838.1914 C2722.5171 -838.1914 2725.6724 -838.1914 2731.6187 -838.1914 Cf2701.6763 -854.623 m2702.604 -859.2578 2705.1714 -872.0957 2708.6655 -889.5664 C2698.3335 -872.3438 2692.5845 -862.7637 2687.6987 -854.623 C2694.3647 -854.623 2697.5122 -854.623 2701.6763 -854.623 Cf2649.2417 -893.0801 m2657.3843 -897.9648 2666.9653 -903.7129 2684.187 -914.0469 C2666.7144 -910.5527 2653.8794 -907.9844 2649.2417 -907.0566 C2649.2417 -902.8926 2649.2417 -899.7441 2649.2417 -893.0801 Cf2632.811 -921.9502 m2639.9604 -923.3799 2651.9292 -925.7725 2670.4263 -929.4736 C2651.9292 -933.1748 2639.9604 -935.5674 2632.811 -936.999 C2632.811 -931.0498 2632.811 -927.8975 2632.811 -921.9502 Cf2649.2417 -965.8701 m2649.2417 -959.2061 2649.2417 -956.0576 2649.2417 -951.8916 C2653.8794 -950.9658 2666.7144 -948.3975 2684.187 -944.9033 C2666.9653 -955.2373 2657.3843 -960.9854 2649.2417 -965.8701 Cf2687.6987 -1004.3271 m2692.5845 -996.1865 2698.3335 -986.6045 2708.6655 -969.3818 C2705.1714 -986.8545 2702.604 -999.6924 2701.6763 -1004.3271 C2697.5122 -1004.3271 2694.3647 -1004.3271 2687.6987 -1004.3271 Cf2716.5708 -1020.7588 m2718.0005 -1013.6084 2720.395 -1001.6377 2724.0942 -983.1436 C2727.7944 -1001.6377 2730.189 -1013.6084 2731.6187 -1020.7588 C2725.6724 -1020.7588 2722.5171 -1020.7588 2716.5708 -1020.7588 Cf2746.5132 -1004.3271 m2745.5854 -999.6924 2743.0181 -986.8545 2739.5239 -969.3818 C2749.856 -986.6045 2755.605 -996.1865 2760.4907 -1004.3271 C2753.8247 -1004.3271 2750.6772 -1004.3271 2746.5132 -1004.3271 Cf2798.9478 -965.8701 m2790.8052 -960.9854 2781.2241 -955.2373 2764.0024 -944.9033 C2781.4751 -948.3975 2794.3101 -950.9658 2798.9478 -951.8916 C2798.9478 -956.0576 2798.9478 -959.2061 2798.9478 -965.8701 Cf2815.3784 -936.999 m2808.229 -935.5674 2796.2603 -933.1748 2777.7632 -929.4736 C2796.2603 -925.7725 2808.229 -923.3799 2815.3784 -921.9502 C2815.3784 -927.8975 2815.3784 -931.0498 2815.3784 -936.999 Cf*ULB%AI5_EndLayer--%%PageTrailergsave annotatepage grestore showpage%%TrailerAdobe_Illustrator_AI5 /terminate get execAdobe_blend_AI5 /terminate get execAdobe_typography_AI5 /terminate get execAdobe_level2_AI5 /terminate get exec%%EOF